package gltools.gl;


public interface GL1 {
	public static final int GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING = 0x0889D;
	public static final int GL_CURRENT_SECONDARY_COLOR = 0x08459;
	public static final int GL_MAX_CUBE_MAP_TEXTURE_SIZE = 0x0851C;
	public static final int GL_3D = 0x00601;
	public static final int GL_COMPILE = 0x01300;
	public static final int GL_ONE_MINUS_SRC_COLOR = 0x00301;
	public static final int GL_DYNAMIC_READ = 0x088E9;
	public static final int GL_SCISSOR_TEST = 0x00C11;
	public static final int GL_TEXTURE_GEN_MODE = 0x02500;
	public static final int GL_ARRAY_BUFFER_BINDING = 0x08894;
	public static final int GL_C4UB_V2F = 0x02A22;
	public static final int GL_LINE_BIT = 0x00004;
	public static final int GL_ONE_MINUS_DST_COLOR = 0x00307;
	public static final int GL_POINT_SIZE_MAX = 0x08127;
	public static final int GL_PACK_LSB_FIRST = 0x00D01;
	public static final int GL_TEXTURE_COMPARE_FUNC = 0x0884D;
	public static final int GL_ACCUM_CLEAR_VALUE = 0x00B80;
	public static final int GL_WEIGHT_ARRAY_BUFFER_BINDING = 0x0889E;
	public static final int GL_VENDOR = 0x01F00;
	public static final int GL_PACK_SWAP_BYTES = 0x00D00;
	public static final int GL_ALIASED_LINE_WIDTH_RANGE = 0x0846E;
	public static final int GL_INVALID_ENUM = 0x00500;
	public static final int GL_POLYGON_OFFSET_LINE = 0x02A02;
	public static final int GL_T4F_C4F_N3F_V4F = 0x02A2D;
	public static final int GL_CCW = 0x00901;
	public static final int GL_SRC2_ALPHA = 0x0858A;
	public static final int GL_COLOR_BUFFER_BIT = 0x04000;
	public static final int GL_STENCIL_REF = 0x00B97;
	public static final int GL_MODELVIEW_STACK_DEPTH = 0x00BA3;
	public static final int GL_POINT_SIZE_RANGE = 0x00B12;
	public static final int GL_TEXTURE = 0x01702;
	public static final int GL_TEXTURE_MIN_LOD = 0x0813A;
	public static final int GL_NORMAL_ARRAY_BUFFER_BINDING = 0x08897;
	public static final int GL_GREEN_SCALE = 0x00D18;
	public static final int GL_TEXTURE_CUBE_MAP = 0x08513;
	public static final int GL_CURRENT_QUERY = 0x08865;
	public static final int GL_ALWAYS = 0x00207;
	public static final int GL_TEXTURE_RED_SIZE = 0x0805C;
	public static final int GL_COMPARE_R_TO_TEXTURE = 0x0884E;
	public static final int GL_INVERT = 0x0150A;
	public static final int GL_GREEN_BIAS = 0x00D19;
	public static final int GL_STENCIL_PASS_DEPTH_PASS = 0x00B96;
	public static final int GL_QUERY_COUNTER_BITS = 0x08864;
	public static final int GL_FEEDBACK = 0x01C01;
	public static final int GL_CLAMP_TO_BORDER = 0x0812D;
	public static final int GL_LUMINANCE = 0x01909;
	public static final int GL_DEPTH_TEST = 0x00B71;
	public static final int GL_INVALID_OPERATION = 0x00502;
	public static final int GL_SOURCE0_RGB = 0x08580;
	public static final int GL_ACCUM_BUFFER_BIT = 0x00200;
	public static final int GL_COLOR_ARRAY_POINTER = 0x08090;
	public static final int GL_PREVIOUS = 0x08578;
	public static final int GL_OPERAND0_RGB = 0x08590;
	public static final int GL_BUFFER_MAPPED = 0x088BC;
	public static final int GL_LUMINANCE8 = 0x08040;
	public static final int GL_PIXEL_MAP_I_TO_A_SIZE = 0x00CB5;
	public static final int GL_FRONT_AND_BACK = 0x00408;
	public static final int GL_VERTEX_ARRAY_SIZE = 0x0807A;
	public static final int GL_UNSIGNED_SHORT_5_6_5_REV = 0x08364;
	public static final int GL_LUMINANCE4 = 0x0803F;
	public static final int GL_POLYGON_OFFSET_FACTOR = 0x08038;
	public static final int GL_AUX_BUFFERS = 0x00C00;
	public static final int GL_FOG_HINT = 0x00C54;
	public static final int GL_LUMINANCE_ALPHA = 0x0190A;
	public static final int GL_XOR = 0x01506;
	public static final int GL_TEXTURE_GREEN_SIZE = 0x0805D;
	public static final int GL_MAP2_GRID_SEGMENTS = 0x00DD3;
	public static final int GL_COPY = 0x01503;
	public static final int GL_CURRENT_TEXTURE_COORDS = 0x00B03;
	public static final int GL_SET = 0x0150F;
	public static final int GL_UNSIGNED_INT_10_10_10_2 = 0x08036;
	public static final int GL_C4UB_V3F = 0x02A23;
	public static final int GL_SOURCE1_ALPHA = 0x08589;
	public static final int GL_ACCUM_BLUE_BITS = 0x00D5A;
	public static final int GL_FLAT = 0x01D00;
	public static final int GL_TEXTURE_BASE_LEVEL = 0x0813C;
	public static final int GL_KEEP = 0x01E00;
	public static final int GL_LINEAR_MIPMAP_NEAREST = 0x02701;
	public static final int GL_TEXTURE_LOD_BIAS = 0x08501;
	public static final int GL_CURRENT_COLOR = 0x00B00;
	public static final int GL_LIST_INDEX = 0x00B33;
	public static final int GL_REPLACE = 0x01E01;
	public static final int GL_INTENSITY = 0x08049;
	public static final int GL_PASS_THROUGH_TOKEN = 0x00700;
	public static final int GL_NORMAL_ARRAY = 0x08075;
	public static final int GL_PROJECTION_MATRIX = 0x00BA7;
	public static final int GL_PACK_IMAGE_HEIGHT = 0x0806C;
	public static final int GL_UNPACK_IMAGE_HEIGHT = 0x0806E;
	public static final int GL_FOG_COORD_ARRAY_TYPE = 0x08454;
	public static final int GL_MATRIX_MODE = 0x00BA0;
	public static final int GL_MAX_LIST_NESTING = 0x00B31;
	public static final int GL_MAP1_GRID_DOMAIN = 0x00DD0;
	public static final int GL_VERTEX_ARRAY_TYPE = 0x0807B;
	public static final int GL_OR_INVERTED = 0x0150D;
	public static final int GL_MAX_TEXTURE_UNITS = 0x084E2;
	public static final int GL_SHININESS = 0x01601;
	public static final int GL_NOOP = 0x01505;
	public static final int GL_UNPACK_ROW_LENGTH = 0x00CF2;
	public static final int GL_MAP_STENCIL = 0x00D11;
	public static final int GL_RGBA_MODE = 0x00C31;
	public static final int GL_ARRAY_BUFFER = 0x08892;
	public static final int GL_LINE_STIPPLE = 0x00B24;
	public static final int GL_MAX_3D_TEXTURE_SIZE = 0x08073;
	public static final int GL_QUERY_RESULT_AVAILABLE = 0x08867;
	public static final int GL_SMOOTH_LINE_WIDTH_GRANULARITY = 0x00B23;
	public static final int GL_SECONDARY_COLOR_ARRAY_STRIDE = 0x0845C;
	public static final int GL_VERTEX_ARRAY_BUFFER_BINDING = 0x08896;
	public static final int GL_MAX_TEXTURE_SIZE = 0x00D33;
	public static final int GL_DYNAMIC_DRAW = 0x088E8;
	public static final int GL_OUT_OF_MEMORY = 0x00505;
	public static final int GL_RIGHT = 0x00407;
	public static final int GL_CLIENT_VERTEX_ARRAY_BIT = 0x00002;
	public static final int GL_UNSIGNED_INT_2_10_10_10_REV = 0x08368;
	public static final int GL_MAX_ELEMENTS_VERTICES = 0x080E8;
	public static final int GL_TRANSPOSE_TEXTURE_MATRIX = 0x084E5;
	public static final int GL_COLOR_WRITEMASK = 0x00C23;
	public static final int GL_NONE = 0x00000;
	public static final int GL_2_BYTES = 0x01407;
	public static final int GL_DEPTH_BITS = 0x00D56;
	public static final int GL_RESCALE_NORMAL = 0x0803A;
	public static final int GL_LINE_WIDTH_GRANULARITY = 0x00B23;
	public static final int GL_PIXEL_MAP_S_TO_S = 0x00C71;
	public static final int GL_UNSIGNED_INT_8_8_8_8 = 0x08035;
	public static final int GL_ALPHA = 0x01906;
	public static final int GL_TEXTURE_HEIGHT = 0x01001;
	public static final int GL_VERTEX_ARRAY_STRIDE = 0x0807C;
	public static final int GL_SECONDARY_COLOR_ARRAY = 0x0845E;
	public static final int GL_NEVER = 0x00200;
	public static final int GL_UNSIGNED_INT_8_8_8_8_REV = 0x08367;
	public static final int GL_COLOR_ARRAY_BUFFER_BINDING = 0x08898;
	public static final int GL_CLIP_PLANE0 = 0x03000;
	public static final int GL_DONT_CARE = 0x01100;
	public static final int GL_MIRRORED_REPEAT = 0x08370;
	public static final int GL_CLIP_PLANE1 = 0x03001;
	public static final int GL_CLIP_PLANE2 = 0x03002;
	public static final int GL_FALSE = 0x00000;
	public static final int GL_CLIP_PLANE3 = 0x03003;
	public static final int GL_RGB_SCALE = 0x08573;
	public static final int GL_CLIP_PLANE4 = 0x03004;
	public static final int GL_PIXEL_MAP_A_TO_A = 0x00C79;
	public static final int GL_CLIP_PLANE5 = 0x03005;
	public static final int GL_HINT_BIT = 0x08000;
	public static final int GL_TEXTURE_MAX_LOD = 0x0813B;
	public static final int GL_LIGHTING_BIT = 0x00040;
	public static final int GL_LINE_SMOOTH = 0x00B20;
	public static final int GL_MAP2_VERTEX_4 = 0x00DB8;
	public static final int GL_SOURCE1_RGB = 0x08581;
	public static final int GL_MAP2_VERTEX_3 = 0x00DB7;
	public static final int GL_ALPHA_TEST = 0x00BC0;
	public static final int GL_MAX_TEXTURE_LOD_BIAS = 0x084FD;
	public static final int GL_T2F_C4F_N3F_V3F = 0x02A2C;
	public static final int GL_COLOR_ARRAY_STRIDE = 0x08083;
	public static final int GL_POINT_TOKEN = 0x00701;
	public static final int GL_ELEMENT_ARRAY_BUFFER_BINDING = 0x08895;
	public static final int GL_EDGE_FLAG_ARRAY_STRIDE = 0x0808C;
	public static final int GL_COMPRESSED_INTENSITY = 0x084EC;
	public static final int GL_INT = 0x01404;
	public static final int GL_SAMPLES_PASSED = 0x08914;
	public static final int GL_DEPTH_WRITEMASK = 0x00B72;
	public static final int GL_MAX_LIGHTS = 0x00D31;
	public static final int GL_COMBINE_RGB = 0x08571;
	public static final int GL_CLIENT_PIXEL_STORE_BIT = 0x00001;
	public static final int GL_FUNC_REVERSE_SUBTRACT = 0x0800B;
	public static final int GL_STENCIL_BUFFER_BIT = 0x00400;
	public static final int GL_PROJECTION_STACK_DEPTH = 0x00BA4;
	public static final int GL_UNPACK_SKIP_ROWS = 0x00CF3;
	public static final int GL_OPERAND1_ALPHA = 0x08599;
	public static final int GL_RENDER = 0x01C00;
	public static final int GL_SCISSOR_BOX = 0x00C10;
	public static final int GL_SMOOTH_LINE_WIDTH_RANGE = 0x00B22;
	public static final int GL_PACK_ALIGNMENT = 0x00D05;
	public static final int GL_REPEAT = 0x02901;
	public static final int GL_INTENSITY16 = 0x0804D;
	public static final int GL_NORMAL_ARRAY_POINTER = 0x0808F;
	public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x08515;
	public static final int GL_RENDERER = 0x01F01;
	public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 0x08517;
	public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 0x08519;
	public static final int GL_INTENSITY12 = 0x0804C;
	public static final int GL_STREAM_COPY = 0x088E2;
	public static final int GL_FRONT_FACE = 0x00B46;
	public static final int GL_BLEND_SRC = 0x00BE1;
	public static final int GL_FRAGMENT_DEPTH = 0x08452;
	public static final int GL_FEEDBACK_BUFFER_POINTER = 0x00DF0;
	public static final int GL_FOG_COORDINATE_SOURCE = 0x08450;
	public static final int GL_TEXTURE0 = 0x084C0;
	public static final int GL_STENCIL_TEST = 0x00B90;
	public static final int GL_DECR = 0x01E03;
	public static final int GL_UNSIGNED_SHORT_1_5_5_5_REV = 0x08366;
	public static final int GL_TEXTURE4 = 0x084C4;
	public static final int GL_COLOR_MATERIAL_FACE = 0x00B55;
	public static final int GL_TEXTURE3 = 0x084C3;
	public static final int GL_DEPTH_COMPONENT32 = 0x081A7;
	public static final int GL_POINT_FADE_THRESHOLD_SIZE = 0x08128;
	public static final int GL_TEXTURE2 = 0x084C2;
	public static final int GL_MAX_PIXEL_MAP_TABLE = 0x00D34;
	public static final int GL_TEXTURE1 = 0x084C1;
	public static final int GL_STEREO = 0x00C33;
	public static final int GL_TEXTURE8 = 0x084C8;
	public static final int GL_TEXTURE7 = 0x084C7;
	public static final int GL_RGB16 = 0x08054;
	public static final int GL_UNPACK_SKIP_IMAGES = 0x0806D;
	public static final int GL_TEXTURE6 = 0x084C6;
	public static final int GL_STATIC_DRAW = 0x088E4;
	public static final int GL_RENDER_MODE = 0x00C40;
	public static final int GL_TEXTURE5 = 0x084C5;
	public static final int GL_RGB12 = 0x08053;
	public static final int GL_FUNC_ADD = 0x08006;
	public static final int GL_TEXTURE9 = 0x084C9;
	public static final int GL_READ_WRITE = 0x088BA;
	public static final int GL_ORDER = 0x00A01;
	public static final int GL_RGB10 = 0x08052;
	public static final int GL_POINTS = 0x00000;
	public static final int GL_CLIENT_ACTIVE_TEXTURE = 0x084E1;
	public static final int GL_LINES = 0x00001;
	public static final int GL_LIGHTING = 0x00B50;
	public static final int GL_SELECT = 0x01C02;
	public static final int GL_COMPRESSED_ALPHA = 0x084E9;
	public static final int GL_BLEND_DST = 0x00BE0;
	public static final int GL_TEXTURE_STACK_DEPTH = 0x00BA5;
	public static final int GL_ALPHA_BITS = 0x00D55;
	public static final int GL_PERSPECTIVE_CORRECTION_HINT = 0x00C50;
	public static final int GL_UNPACK_SKIP_PIXELS = 0x00CF4;
	public static final int GL_BLUE_SCALE = 0x00D1A;
	public static final int GL_BACK_LEFT = 0x00402;
	public static final int GL_PACK_SKIP_ROWS = 0x00D03;
	public static final int GL_UNPACK_SWAP_BYTES = 0x00CF0;
	public static final int GL_POLYGON_STIPPLE = 0x00B42;
	public static final int GL_LIGHT_MODEL_TWO_SIDE = 0x00B52;
	public static final int GL_MAP1_COLOR_4 = 0x00D90;
	public static final int GL_CURRENT_RASTER_DISTANCE = 0x00B09;
	public static final int GL_BLEND_SRC_ALPHA = 0x080CB;
	public static final int GL_STATIC_READ = 0x088E5;
	public static final int GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING = 0x0889C;
	public static final int GL_DRAW_PIXEL_TOKEN = 0x00705;
	public static final int GL_COLOR_CLEAR_VALUE = 0x00C22;
	public static final int GL_INTENSITY8 = 0x0804B;
	public static final int GL_TEXTURE_COMPRESSED = 0x086A1;
	public static final int GL_3D_COLOR_TEXTURE = 0x00603;
	public static final int GL_INTENSITY4 = 0x0804A;
	public static final int GL_TEXTURE_COMPARE_MODE = 0x0884C;
	public static final int GL_UNSIGNED_SHORT_4_4_4_4 = 0x08033;
	public static final int GL_TEXTURE_COORD_ARRAY_TYPE = 0x08089;
	public static final int GL_LINE_STIPPLE_PATTERN = 0x00B25;
	public static final int GL_POLYGON_SMOOTH = 0x00B41;
	public static final int GL_BUFFER_ACCESS = 0x088BB;
	public static final int GL_POINT_SIZE_GRANULARITY = 0x00B13;
	public static final int GL_FOG_COORD = 0x08451;
	public static final int GL_CONSTANT_ALPHA = 0x08003;
	public static final int GL_OR_REVERSE = 0x0150B;
	public static final int GL_STENCIL_PASS_DEPTH_FAIL = 0x00B95;
	public static final int GL_SRC0_RGB = 0x08580;
	public static final int GL_SECONDARY_COLOR_ARRAY_SIZE = 0x0845A;
	public static final int GL_ONE_MINUS_CONSTANT_ALPHA = 0x08004;
	public static final int GL_FOG_MODE = 0x00B65;
	public static final int GL_CLAMP = 0x02900;
	public static final int GL_ALPHA_TEST_FUNC = 0x00BC1;
	public static final int GL_POLYGON_OFFSET_POINT = 0x02A01;
	public static final int GL_FEEDBACK_BUFFER_SIZE = 0x00DF1;
	public static final int GL_FOG_COORDINATE = 0x08451;
	public static final int GL_SECONDARY_COLOR_ARRAY_TYPE = 0x0845B;
	public static final int GL_DEPTH_RANGE = 0x00B70;
	public static final int GL_ACCUM_ALPHA_BITS = 0x00D5B;
	public static final int GL_LIST_MODE = 0x00B30;
	public static final int GL_TEXTURE_MATRIX = 0x00BA8;
	public static final int GL_DEPTH_SCALE = 0x00D1E;
	public static final int GL_FRONT_RIGHT = 0x00401;
	public static final int GL_MAX_CLIP_PLANES = 0x00D32;
	public static final int GL_BLEND_EQUATION = 0x08009;
	public static final int GL_INCR = 0x01E02;
	public static final int GL_POLYGON_OFFSET_FILL = 0x08037;
	public static final int GL_VERTEX_ARRAY_POINTER = 0x0808E;
	public static final int GL_FOG_COORDINATE_ARRAY = 0x08457;
	public static final int GL_UNSIGNED_BYTE_2_3_3_REV = 0x08362;
	public static final int GL_NORMALIZE = 0x00BA1;
	public static final int GL_FUNC_SUBTRACT = 0x0800A;
	public static final int GL_BLUE = 0x01905;
	public static final int GL_COMPILE_AND_EXECUTE = 0x01301;
	public static final int GL_LUMINANCE6_ALPHA2 = 0x08044;
	public static final int GL_ACCUM_RED_BITS = 0x00D58;
	public static final int GL_3D_COLOR = 0x00602;
	public static final int GL_MAP2_COLOR_4 = 0x00DB0;
	public static final int GL_UNSIGNED_BYTE = 0x01401;
	public static final int GL_TEXTURE_BLUE_SIZE = 0x0805E;
	public static final int GL_CURRENT_RASTER_POSITION = 0x00B07;
	public static final int GL_PIXEL_MAP_R_TO_R_SIZE = 0x00CB6;
	public static final int GL_TEXTURE_BIT = 0x40000;
	public static final int GL_LINE_TOKEN = 0x00702;
	public static final int GL_TEXTURE_BINDING_1D = 0x08068;
	public static final int GL_TEXTURE_COORD_ARRAY_SIZE = 0x08088;
	public static final int GL_FOG_COORD_ARRAY = 0x08457;
	public static final int GL_MODULATE = 0x02100;
	public static final int GL_DST_ALPHA = 0x00304;
	public static final int GL_CURRENT_RASTER_POSITION_VALID = 0x00B08;
	public static final int GL_SELECTION_BUFFER_POINTER = 0x00DF3;
	public static final int GL_T2F_C4UB_V3F = 0x02A29;
	public static final int GL_OPERAND2_ALPHA = 0x0859A;
	public static final int GL_LINE_RESET_TOKEN = 0x00707;
	public static final int GL_MAX_TEXTURE_STACK_DEPTH = 0x00D39;
	public static final int GL_SAMPLES = 0x080A9;
	public static final int GL_LINE_WIDTH = 0x00B21;
	public static final int GL_SRC_COLOR = 0x00300;
	public static final int GL_T2F_C3F_V3F = 0x02A2A;
	public static final int GL_STENCIL_WRITEMASK = 0x00B98;
	public static final int GL_TEXTURE_ENV = 0x02300;
	public static final int GL_UNPACK_LSB_FIRST = 0x00CF1;
	public static final int GL_BITMAP = 0x01A00;
	public static final int GL_TEXTURE_BINDING_2D = 0x08069;
	public static final int GL_TEXTURE_FILTER_CONTROL = 0x08500;
	public static final int GL_LEFT = 0x00406;
	public static final int GL_COMPRESSED_LUMINANCE_ALPHA = 0x084EB;
	public static final int GL_FOG_COORD_ARRAY_BUFFER_BINDING = 0x0889D;
	public static final int GL_CURRENT_RASTER_TEXTURE_COORDS = 0x00B06;
	public static final int GL_NOTEQUAL = 0x00205;
	public static final int GL_NORMAL_ARRAY_STRIDE = 0x0807F;
	public static final int GL_RGBA16 = 0x0805B;
	public static final int GL_TEXTURE_COMPRESSION_HINT = 0x084EF;
	public static final int GL_TRANSPOSE_MODELVIEW_MATRIX = 0x084E3;
	public static final int GL_ALPHA4 = 0x0803B;
	public static final int GL_NOR = 0x01508;
	public static final int GL_BLUE_BIAS = 0x00D1B;
	public static final int GL_ALPHA8 = 0x0803C;
	public static final int GL_RGBA12 = 0x0805A;
	public static final int GL_EDGE_FLAG_ARRAY_POINTER = 0x08093;
	public static final int GL_AUTO_NORMAL = 0x00D80;
	public static final int GL_STENCIL_BITS = 0x00D57;
	public static final int GL_CULL_FACE_MODE = 0x00B45;
	public static final int GL_PIXEL_MAP_B_TO_B_SIZE = 0x00CB8;
	public static final int GL_MAP1_NORMAL = 0x00D92;
	public static final int GL_UNSIGNED_SHORT_5_5_5_1 = 0x08034;
	public static final int GL_DEPTH_COMPONENT24 = 0x081A6;
	public static final int GL_READ_BUFFER = 0x00C02;
	public static final int GL_SRC1_RGB = 0x08581;
	public static final int GL_FOG_COLOR = 0x00B66;
	public static final int GL_POINT_SIZE_MIN = 0x08126;
	public static final int GL_EQUIV = 0x01509;
	public static final int GL_FASTEST = 0x01101;
	public static final int GL_LINE = 0x01B01;
	public static final int GL_BLEND_DST_RGB = 0x080C8;
	public static final int GL_4D_COLOR_TEXTURE = 0x00604;
	public static final int GL_OPERAND0_ALPHA = 0x08598;
	public static final int GL_REFLECTION_MAP = 0x08512;
	public static final int GL_MODELVIEW = 0x01700;
	public static final int GL_TEXTURE_PRIORITY = 0x08066;
	public static final int GL_SINGLE_COLOR = 0x081F9;
	public static final int GL_BLEND = 0x00BE2;
	public static final int GL_DEPTH_COMPONENT16 = 0x081A5;
	public static final int GL_COLOR_SUM = 0x08458;
	public static final int GL_POINT_SMOOTH = 0x00B10;
	public static final int GL_SEPARATE_SPECULAR_COLOR = 0x081FA;
	public static final int GL_FOG_COORDINATE_ARRAY_TYPE = 0x08454;
	public static final int GL_CW = 0x00900;
	public static final int GL_ALIASED_POINT_SIZE_RANGE = 0x0846D;
	public static final int GL_ENABLE_BIT = 0x02000;
	public static final int GL_LEQUAL = 0x00203;
	public static final int GL_EXP2 = 0x00801;
	public static final int GL_EVAL_BIT = 0x10000;
	public static final int GL_SECONDARY_COLOR_ARRAY_POINTER = 0x0845D;
	public static final int GL_POLYGON_TOKEN = 0x00703;
	public static final int GL_DEPTH_TEXTURE_MODE = 0x0884B;
	public static final int GL_UNSIGNED_INT = 0x01405;
	public static final int GL_FOG_COORDINATE_ARRAY_STRIDE = 0x08455;
	public static final int GL_LINE_WIDTH_RANGE = 0x00B22;
	public static final int GL_GREEN_BITS = 0x00D53;
	public static final int GL_POINT_BIT = 0x00002;
	public static final int GL_TEXTURE_RESIDENT = 0x08067;
	public static final int GL_STENCIL_INDEX = 0x01901;
	public static final int GL_LUMINANCE12_ALPHA12 = 0x08047;
	public static final int GL_DOUBLEBUFFER = 0x00C32;
	public static final int GL_RED_BITS = 0x00D52;
	public static final int GL_SHORT = 0x01402;
	public static final int GL_EXP = 0x00800;
	public static final int GL_LINE_SMOOTH_HINT = 0x00C52;
	public static final int GL_TEXTURE_INTENSITY_SIZE = 0x08061;
	public static final int GL_UNSIGNED_SHORT_4_4_4_4_REV = 0x08365;
	public static final int GL_COLOR_ARRAY_SIZE = 0x08081;
	public static final int GL_LIGHT_MODEL_AMBIENT = 0x00B53;
	public static final int GL_EYE_LINEAR = 0x02400;
	public static final int GL_PIXEL_MAP_I_TO_G_SIZE = 0x00CB3;
	public static final int GL_PIXEL_MAP_R_TO_R = 0x00C76;
	public static final int GL_COPY_PIXEL_TOKEN = 0x00706;
	public static final int GL_TEXTURE_COORD_ARRAY_POINTER = 0x08092;
	public static final int GL_SAMPLE_COVERAGE_VALUE = 0x080AA;
	public static final int GL_ONE_MINUS_DST_ALPHA = 0x00305;
	public static final int GL_NEAREST = 0x02600;
	public static final int GL_CURRENT_NORMAL = 0x00B02;
	public static final int GL_COLOR_MATERIAL = 0x00B57;
	public static final int GL_POLYGON_MODE = 0x00B40;
	public static final int GL_ATTRIB_STACK_DEPTH = 0x00BB0;
	public static final int GL_AND_REVERSE = 0x01502;
	public static final int GL_CURRENT_BIT = 0x00001;
	public static final int GL_COEFF = 0x00A00;
	public static final int GL_MAX_PROJECTION_STACK_DEPTH = 0x00D38;
	public static final int GL_R3_G3_B2 = 0x02A10;
	public static final int GL_TRUE = 0x00001;
	public static final int GL_LINE_STRIP = 0x00003;
	public static final int GL_PRIMARY_COLOR = 0x08577;
	public static final int GL_SMOOTH_POINT_SIZE_GRANULARITY = 0x00B13;
	public static final int GL_LIGHT_MODEL_LOCAL_VIEWER = 0x00B51;
	public static final int GL_TEXTURE_ENV_COLOR = 0x02201;
	public static final int GL_CULL_FACE = 0x00B44;
	public static final int GL_BLEND_SRC_RGB = 0x080C9;
	public static final int GL_NO_ERROR = 0x00000;
	public static final int GL_SRC2_RGB = 0x08582;
	public static final int GL_INTERPOLATE = 0x08575;
	public static final int GL_DST_COLOR = 0x00306;
	public static final int GL_LESS = 0x00201;
	public static final int GL_VIEWPORT = 0x00BA2;
	public static final int GL_BACK_RIGHT = 0x00403;
	public static final int GL_SOURCE0_ALPHA = 0x08588;
	public static final int GL_MIN = 0x08007;
	public static final int GL_TEXTURE_COORD_ARRAY = 0x08078;
	public static final int GL_MAP2_NORMAL = 0x00DB2;
	public static final int GL_TEXTURE_LUMINANCE_SIZE = 0x08060;
	public static final int GL_COMPRESSED_RGBA = 0x084EE;
	public static final int GL_MAX_NAME_STACK_DEPTH = 0x00D37;
	public static final int GL_SELECTION_BUFFER_SIZE = 0x00DF4;
	public static final int GL_BLEND_COLOR = 0x08005;
	public static final int GL_LIST_BIT = 0x20000;
	public static final int GL_DEPTH_BIAS = 0x00D1F;
	public static final int GL_STENCIL_VALUE_MASK = 0x00B93;
	public static final int GL_TEXTURE_WRAP_R = 0x08072;
	public static final int GL_DEPTH_COMPONENT = 0x01902;
	public static final int GL_TEXTURE_WRAP_S = 0x02802;
	public static final int GL_DEPTH_CLEAR_VALUE = 0x00B73;
	public static final int GL_TEXTURE_WRAP_T = 0x02803;
	public static final int GL_EYE_PLANE = 0x02502;
	public static final int GL_ONE = 0x00001;
	public static final int GL_GREATER = 0x00204;
	public static final int GL_DEPTH_FUNC = 0x00B74;
	public static final int GL_ELEMENT_ARRAY_BUFFER = 0x08893;
	public static final int GL_QUADRATIC_ATTENUATION = 0x01209;
	public static final int GL_SPOT_CUTOFF = 0x01206;
	public static final int GL_DECAL = 0x02101;
	public static final int GL_FILL = 0x01B02;
	public static final int GL_DYNAMIC_COPY = 0x088EA;
	public static final int GL_AND_INVERTED = 0x01504;
	public static final int GL_ALL_ATTRIB_BITS = 0xFFFFF;
	public static final int GL_SRC1_ALPHA = 0x08589;
	public static final int GL_TEXTURE_ENV_MODE = 0x02200;
	public static final int GL_VIEWPORT_BIT = 0x00800;
	public static final int GL_PACK_SKIP_PIXELS = 0x00D04;
	public static final int GL_ALPHA_TEST_REF = 0x00BC2;
	public static final int GL_TRIANGLES = 0x00004;
	public static final int GL_TEXTURE_2D = 0x00DE1;
	public static final int GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING = 0x0889A;
	public static final int GL_SOURCE2_ALPHA = 0x0858A;
	public static final int GL_DOMAIN = 0x00A02;
	public static final int GL_QUADS = 0x00007;
	public static final int GL_PROJECTION = 0x01701;
	public static final int GL_POSITION = 0x01203;
	public static final int GL_FOG_COORD_SRC = 0x08450;
	public static final int GL_FOG_COORD_ARRAY_POINTER = 0x08456;
	public static final int GL_DEPTH_BUFFER_BIT = 0x00100;
	public static final int GL_LUMINANCE4_ALPHA4 = 0x08043;
	public static final int GL_POINT_DISTANCE_ATTENUATION = 0x08129;
	public static final int GL_INDEX_ARRAY_BUFFER_BINDING = 0x08899;
	public static final int GL_ALPHA_SCALE = 0x00D1C;
	public static final int GL_LINEAR = 0x02601;
	public static final int GL_MULT = 0x00103;
	public static final int GL_RGBA = 0x01908;
	public static final int GL_NEAREST_MIPMAP_LINEAR = 0x02702;
	public static final int GL_C3F_V3F = 0x02A24;
	public static final int GL_RGB5 = 0x08050;
	public static final int GL_RGB4 = 0x0804F;
	public static final int GL_BGRA = 0x080E1;
	public static final int GL_SAMPLE_COVERAGE = 0x080A0;
	public static final int GL_EXTENSIONS = 0x01F03;
	public static final int GL_RGB8 = 0x08051;
	public static final int GL_OBJECT_PLANE = 0x02501;
	public static final int GL_TEXTURE_1D = 0x00DE0;
	public static final int GL_TEXTURE_INTERNAL_FORMAT = 0x01003;
	public static final int GL_VERTEX_ARRAY = 0x08074;
	public static final int GL_ACTIVE_TEXTURE = 0x084E0;
	public static final int GL_FOG_COORDINATE_ARRAY_POINTER = 0x08456;
	public static final int GL_FEEDBACK_BUFFER_TYPE = 0x00DF2;
	public static final int GL_UNSIGNED_SHORT_5_6_5 = 0x08363;
	public static final int GL_BUFFER_MAP_POINTER = 0x088BD;
	public static final int GL_SRC_ALPHA_SATURATE = 0x00308;
	public static final int GL_UNPACK_ALIGNMENT = 0x00CF5;
	public static final int GL_LIST_BASE = 0x00B32;
	public static final int GL_SPOT_EXPONENT = 0x01205;
	public static final int GL_PACK_ROW_LENGTH = 0x00D02;
	public static final int GL_TRANSPOSE_PROJECTION_MATRIX = 0x084E4;
	public static final int GL_NAME_STACK_DEPTH = 0x00D70;
	public static final int GL_TRANSFORM_BIT = 0x01000;
	public static final int GL_MULTISAMPLE_BIT = 0x00000;
	public static final int GL_BYTE = 0x01400;
	public static final int GL_PIXEL_MAP_G_TO_G = 0x00C77;
	public static final int GL_RGB5_A1 = 0x08057;
	public static final int GL_SCISSOR_BIT = 0x80000;
	public static final int GL_GENERATE_MIPMAP_HINT = 0x08192;
	public static final int GL_4_BYTES = 0x01409;
	public static final int GL_MAP1_TEXTURE_COORD_3 = 0x00D95;
	public static final int GL_ZOOM_X = 0x00D16;
	public static final int GL_CONSTANT = 0x08576;
	public static final int GL_MAP1_TEXTURE_COORD_2 = 0x00D94;
	public static final int GL_ZOOM_Y = 0x00D17;
	public static final int GL_COPY_INVERTED = 0x0150C;
	public static final int GL_MAP1_TEXTURE_COORD_4 = 0x00D96;
	public static final int GL_MAP1_TEXTURE_COORD_1 = 0x00D93;
	public static final int GL_COLOR = 0x01800;
	public static final int GL_COLOR_MATERIAL_PARAMETER = 0x00B56;
	public static final int GL_AND = 0x01501;
	public static final int GL_COLOR_ARRAY = 0x08076;
	public static final int GL_POLYGON_BIT = 0x00008;
	public static final int GL_BITMAP_TOKEN = 0x00704;
	public static final int GL_3_BYTES = 0x01408;
	public static final int GL_EQUAL = 0x00202;
	public static final int GL_INDEX_OFFSET = 0x00D13;
	public static final int GL_BACK = 0x00405;
	public static final int GL_PIXEL_MAP_I_TO_R_SIZE = 0x00CB2;
	public static final int GL_POLYGON_STIPPLE_BIT = 0x00010;
	public static final int GL_BUFFER_USAGE = 0x08765;
	public static final int GL_COLOR_ARRAY_TYPE = 0x08082;
	public static final int GL_TEXTURE_BINDING_CUBE_MAP = 0x08514;
	public static final int GL_LOAD = 0x00101;
	public static final int GL_LINE_STIPPLE_REPEAT = 0x00B26;
	public static final int GL_RETURN = 0x00102;
	public static final int GL_TEXTURE_3D = 0x0806F;
	public static final int GL_ONE_MINUS_SRC_ALPHA = 0x00303;
	public static final int GL_GREEN = 0x01904;
	public static final int GL_SAMPLE_ALPHA_TO_COVERAGE = 0x0809E;
	public static final int GL_LINEAR_ATTENUATION = 0x01208;
	public static final int GL_ALPHA_BIAS = 0x00D1D;
	public static final int GL_TEXTURE_ALPHA_SIZE = 0x0805F;
	public static final int GL_NUM_COMPRESSED_TEXTURE_FORMATS = 0x086A2;
	public static final int GL_T2F_V3F = 0x02A27;
	public static final int GL_DOT3_RGB = 0x086AE;
	public static final int GL_TRIANGLE_STRIP = 0x00005;
	public static final int GL_TRANSPOSE_COLOR_MATRIX = 0x084E6;
	public static final int GL_PROXY_TEXTURE_2D = 0x08064;
	public static final int GL_SMOOTH = 0x01D01;
	public static final int GL_DEPTH = 0x01801;
	public static final int GL_LINE_LOOP = 0x00002;
	public static final int GL_LOGIC_OP_MODE = 0x00BF0;
	public static final int GL_SAMPLE_BUFFERS = 0x080A8;
	public static final int GL_PACK_SKIP_IMAGES = 0x0806B;
	public static final int GL_SAMPLE_ALPHA_TO_ONE = 0x0809F;
	public static final int GL_SPHERE_MAP = 0x02402;
	public static final int GL_COMPRESSED_RGB = 0x084ED;
	public static final int GL_CLIENT_ALL_ATTRIB_BITS = 0xFFFFFF;
	public static final int GL_LIGHT_MODEL_COLOR_CONTROL = 0x081F8;
	public static final int GL_POINT_SMOOTH_HINT = 0x00C51;
	public static final int GL_POINT_SIZE = 0x00B11;
	public static final int GL_BUFFER_SIZE = 0x08764;
	public static final int GL_TRIANGLE_FAN = 0x00006;
	public static final int GL_DIFFUSE = 0x01201;
	public static final int GL_STENCIL_CLEAR_VALUE = 0x00B91;
	public static final int GL_TEXTURE_BORDER = 0x01005;
	public static final int GL_DRAW_BUFFER = 0x00C01;
	public static final int GL_MULTISAMPLE = 0x0809D;
	public static final int GL_PROXY_TEXTURE_3D = 0x08070;
	public static final int GL_SMOOTH_POINT_SIZE_RANGE = 0x00B12;
	public static final int GL_SHADE_MODEL = 0x00B54;
	public static final int GL_ACCUM_GREEN_BITS = 0x00D59;
	public static final int GL_RGBA8 = 0x08058;
	public static final int GL_COMPRESSED_LUMINANCE = 0x084EA;
	public static final int GL_POLYGON_OFFSET_UNITS = 0x02A00;
	public static final int GL_COLOR_LOGIC_OP = 0x00BF2;
	public static final int GL_RGBA4 = 0x08056;
	public static final int GL_CURRENT_FOG_COORDINATE = 0x08453;
	public static final int GL_NAND = 0x0150E;
	public static final int GL_RGBA2 = 0x08055;
	public static final int GL_ZERO = 0x00000;
	public static final int GL_STREAM_DRAW = 0x088E0;
	public static final int GL_CURRENT_RASTER_COLOR = 0x00B04;
	public static final int GL_CURRENT_FOG_COORD = 0x08453;
	public static final int GL_UNSIGNED_SHORT = 0x01403;
	public static final int GL_OPERAND1_RGB = 0x08591;
	public static final int GL_CLAMP_TO_EDGE = 0x0812F;
	public static final int GL_READ_ONLY = 0x088B8;
	public static final int GL_LUMINANCE16 = 0x08042;
	public static final int GL_PIXEL_MAP_I_TO_B_SIZE = 0x00CB4;
	public static final int GL_TEXTURE20 = 0x084D4;
	public static final int GL_MAP1_GRID_SEGMENTS = 0x00DD1;
	public static final int GL_EDGE_FLAG_ARRAY_BUFFER_BINDING = 0x0889B;
	public static final int GL_ACCUM = 0x00100;
	public static final int GL_MAX_VIEWPORT_DIMS = 0x00D3A;
	public static final int GL_DECR_WRAP = 0x08508;
	public static final int GL_STACK_OVERFLOW = 0x00503;
	public static final int GL_DOT3_RGBA = 0x086AF;
	public static final int GL_ONE_MINUS_CONSTANT_COLOR = 0x08002;
	public static final int GL_C4F_N3F_V3F = 0x02A26;
	public static final int GL_BLEND_DST_ALPHA = 0x080CA;
	public static final int GL_FOG_COORD_ARRAY_STRIDE = 0x08455;
	public static final int GL_V2F = 0x02A20;
	public static final int GL_FOG_END = 0x00B64;
	public static final int GL_OBJECT_LINEAR = 0x02401;
	public static final int GL_Q = 0x02003;
	public static final int GL_TEXTURE19 = 0x084D3;
	public static final int GL_SUBTRACT = 0x084E7;
	public static final int GL_TEXTURE18 = 0x084D2;
	public static final int GL_S = 0x02000;
	public static final int GL_TEXTURE_COORD_ARRAY_STRIDE = 0x0808A;
	public static final int GL_TEXTURE17 = 0x084D1;
	public static final int GL_R = 0x02002;
	public static final int GL_TEXTURE16 = 0x084D0;
	public static final int GL_TEXTURE15 = 0x084CF;
	public static final int GL_NORMAL_ARRAY_TYPE = 0x0807E;
	public static final int GL_T = 0x02001;
	public static final int GL_TEXTURE14 = 0x084CE;
	public static final int GL_FRONT_LEFT = 0x00400;
	public static final int GL_TEXTURE13 = 0x084CD;
	public static final int GL_TEXTURE12 = 0x084CC;
	public static final int GL_TEXTURE11 = 0x084CB;
	public static final int GL_SRC0_ALPHA = 0x08588;
	public static final int GL_TEXTURE10 = 0x084CA;
	public static final int GL_LINEAR_MIPMAP_LINEAR = 0x02703;
	public static final int GL_SOURCE2_RGB = 0x08582;
	public static final int GL_TEXTURE31 = 0x084DF;
	public static final int GL_PIXEL_MAP_B_TO_B = 0x00C78;
	public static final int GL_TEXTURE30 = 0x084DE;
	public static final int GL_STATIC_COPY = 0x088E6;
	public static final int GL_EDGE_FLAG_ARRAY = 0x08079;
	public static final int GL_PROXY_TEXTURE_1D = 0x08063;
	public static final int GL_ALPHA16 = 0x0803E;
	public static final int GL_FOG_BIT = 0x00080;
	public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 0x08516;
	public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x0851A;
	public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x08518;
	public static final int GL_INCR_WRAP = 0x08507;
	public static final int GL_ALPHA12 = 0x0803D;
	public static final int GL_T2F_N3F_V3F = 0x02A2B;
	public static final int GL_QUERY_RESULT = 0x08866;
	public static final int GL_NORMAL_MAP = 0x08511;
	public static final int GL_MAX = 0x08008;
	public static final int GL_TEXTURE_GEN_Q = 0x00C63;
	public static final int GL_V3F = 0x02A21;
	public static final int GL_LUMINANCE12_ALPHA4 = 0x08046;
	public static final int GL_TEXTURE_GEN_R = 0x00C62;
	public static final int GL_NEAREST_MIPMAP_NEAREST = 0x02700;
	public static final int GL_STENCIL = 0x01802;
	public static final int GL_TEXTURE_GEN_S = 0x00C60;
	public static final int GL_COMBINE = 0x08570;
	public static final int GL_TEXTURE_GEN_T = 0x00C61;
	public static final int GL_OR = 0x01507;
	public static final int GL_SAMPLE_COVERAGE_INVERT = 0x080AB;
	public static final int GL_WRITE_ONLY = 0x088B9;
	public static final int GL_EDGE_FLAG = 0x00B43;
	public static final int GL_SPECULAR = 0x01202;
	public static final int GL_TEXTURE29 = 0x084DD;
	public static final int GL_MAP2_TEXTURE_COORD_4 = 0x00DB6;
	public static final int GL_MODELVIEW_MATRIX = 0x00BA6;
	public static final int GL_TEXTURE28 = 0x084DC;
	public static final int GL_MAP2_TEXTURE_COORD_3 = 0x00DB5;
	public static final int GL_TEXTURE27 = 0x084DB;
	public static final int GL_EMISSION = 0x01600;
	public static final int GL_MAP2_TEXTURE_COORD_2 = 0x00DB4;
	public static final int GL_TEXTURE26 = 0x084DA;
	public static final int GL_MAP2_TEXTURE_COORD_1 = 0x00DB3;
	public static final int GL_SPOT_DIRECTION = 0x01204;
	public static final int GL_TEXTURE25 = 0x084D9;
	public static final int GL_LUMINANCE12 = 0x08041;
	public static final int GL_TEXTURE24 = 0x084D8;
	public static final int GL_TEXTURE23 = 0x084D7;
	public static final int GL_TEXTURE22 = 0x084D6;
	public static final int GL_LUMINANCE16_ALPHA16 = 0x08048;
	public static final int GL_TEXTURE21 = 0x084D5;
	public static final int GL_LIGHT6 = 0x04006;
	public static final int GL_LIGHT7 = 0x04007;
	public static final int GL_AMBIENT_AND_DIFFUSE = 0x01602;
	public static final int GL_LIGHT4 = 0x04004;
	public static final int GL_N3F_V3F = 0x02A25;
	public static final int GL_BLUE_BITS = 0x00D54;
	public static final int GL_LIGHT5 = 0x04005;
	public static final int GL_INDEX_SHIFT = 0x00D12;
	public static final int GL_FLOAT = 0x01406;
	public static final int GL_MAX_ATTRIB_STACK_DEPTH = 0x00D35;
	public static final int GL_PIXEL_MAP_I_TO_B = 0x00C74;
	public static final int GL_PIXEL_MAP_I_TO_A = 0x00C75;
	public static final int GL_QUAD_STRIP = 0x00008;
	public static final int GL_LIGHT2 = 0x04002;
	public static final int GL_INVALID_VALUE = 0x00501;
	public static final int GL_LIGHT3 = 0x04003;
	public static final int GL_PIXEL_MAP_I_TO_G = 0x00C73;
	public static final int GL_LIGHT0 = 0x04000;
	public static final int GL_LIGHT1 = 0x04001;
	public static final int GL_TEXTURE_DEPTH_SIZE = 0x0884A;
	public static final int GL_TEXTURE_COMPRESSED_IMAGE_SIZE = 0x086A0;
	public static final int GL_PROXY_TEXTURE_CUBE_MAP = 0x0851B;
	public static final int GL_PIXEL_MAP_I_TO_I = 0x00C70;
	public static final int GL_PIXEL_MAP_A_TO_A_SIZE = 0x00CB9;
	public static final int GL_RED = 0x01903;
	public static final int GL_PIXEL_MODE_BIT = 0x00020;
	public static final int GL_PIXEL_MAP_I_TO_R = 0x00C72;
	public static final int GL_POLYGON = 0x00009;
	public static final int GL_GEQUAL = 0x00206;
	public static final int GL_TEXTURE_MIN_FILTER = 0x02801;
	public static final int GL_LUMINANCE8_ALPHA8 = 0x08045;
	public static final int GL_NICEST = 0x01102;
	public static final int GL_STENCIL_FUNC = 0x00B92;
	public static final int GL_UNSIGNED_BYTE_3_3_2 = 0x08032;
	public static final int GL_VERSION = 0x01F02;
	public static final int GL_ADD = 0x00104;
	public static final int GL_STACK_UNDERFLOW = 0x00504;
	public static final int GL_DOUBLE = 0x0140A;
	public static final int GL_FOG_DENSITY = 0x00B62;
	public static final int GL_CONSTANT_COLOR = 0x08001;
	public static final int GL_PIXEL_MAP_S_TO_S_SIZE = 0x00CB1;
	public static final int GL_OPERAND2_RGB = 0x08592;
	public static final int GL_TEXTURE_MAG_FILTER = 0x02800;
	public static final int GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x0889F;
	public static final int GL_MAX_CLIENT_ATTRIB_STACK_DEPTH = 0x00D3B;
	public static final int GL_COMPRESSED_TEXTURE_FORMATS = 0x086A3;
	public static final int GL_MAP_COLOR = 0x00D10;
	public static final int GL_T4F_V4F = 0x02A28;
	public static final int GL_GENERATE_MIPMAP = 0x08191;
	public static final int GL_DITHER = 0x00BD0;
	public static final int GL_RGB10_A2 = 0x08059;
	public static final int GL_MAP1_VERTEX_3 = 0x00D97;
	public static final int GL_MAP1_VERTEX_4 = 0x00D98;
	public static final int GL_STENCIL_FAIL = 0x00B94;
	public static final int GL_AUX0 = 0x00409;
	public static final int GL_AMBIENT = 0x01200;
	public static final int GL_AUX1 = 0x0040A;
	public static final int GL_FRONT = 0x00404;
	public static final int GL_FOG = 0x00B60;
	public static final int GL_FOG_START = 0x00B63;
	public static final int GL_AUX2 = 0x0040B;
	public static final int GL_SUBPIXEL_BITS = 0x00D50;
	public static final int GL_AUX3 = 0x0040C;
	public static final int GL_POLYGON_SMOOTH_HINT = 0x00C53;
	public static final int GL_RGB = 0x01907;
	public static final int GL_BGR = 0x080E0;
	public static final int GL_RED_BIAS = 0x00D15;
	public static final int GL_TEXTURE_DEPTH = 0x08071;
	public static final int GL_2D = 0x00600;
	public static final int GL_MAX_MODELVIEW_STACK_DEPTH = 0x00D36;
	public static final int GL_POINT = 0x01B00;
	public static final int GL_TEXTURE_WIDTH = 0x01000;
	public static final int GL_PIXEL_MAP_I_TO_I_SIZE = 0x00CB0;
	public static final int GL_MAX_EVAL_ORDER = 0x00D30;
	public static final int GL_CLEAR = 0x01500;
	public static final int GL_MAP2_GRID_DOMAIN = 0x00DD2;
	public static final int GL_TEXTURE_MAX_LEVEL = 0x0813D;
	public static final int GL_CONSTANT_ATTENUATION = 0x01207;
	public static final int GL_MAX_ELEMENTS_INDICES = 0x080E9;
	public static final int GL_CLIENT_ATTRIB_STACK_DEPTH = 0x00BB1;
	public static final int GL_STREAM_READ = 0x088E1;
	public static final int GL_COMBINE_ALPHA = 0x08572;
	public static final int GL_SRC_ALPHA = 0x00302;
	public static final int GL_ADD_SIGNED = 0x08574;
	public static final int GL_PIXEL_MAP_G_TO_G_SIZE = 0x00CB7;
	public static final int GL_TEXTURE_BORDER_COLOR = 0x01004;
	public static final int GL_RED_SCALE = 0x00D14;
	public void glAccum(int op, float value);
	public void glAlphaFunc(int func, float ref);
	public boolean glAreTexturesResident(java.nio.IntBuffer textures, java.nio.ByteBuffer residences);
	public boolean glAreTexturesResident(int texture, java.nio.ByteBuffer residences);
	public boolean glAreTexturesResident(int n, java.nio.ByteBuffer textures, java.nio.ByteBuffer residences);
	public void glArrayElement(int i);
	public void glBegin(int mode);
	public void glBindTexture(int target, int texture);
	public void glBitmap(int w, int h, float xOrig, float yOrig, float xInc, float yInc, java.nio.ByteBuffer data);
	public void glBitmap(int w, int h, float xOrig, float yOrig, float xInc, float yInc, long dataOffset);
	public void glBlendFunc(int sfactor, int dfactor);
	public void glCallList(int list);
	public void glCallLists(java.nio.ByteBuffer lists);
	public void glCallLists(java.nio.IntBuffer lists);
	public void glCallLists(int type, java.nio.ByteBuffer lists);
	public void glCallLists(int n, int type, java.nio.ByteBuffer lists);
	public void glCallLists(java.nio.ShortBuffer lists);
	public void glClear(int mask);
	public void glClearAccum(float red, float green, float blue, float alpha);
	public void glClearColor(float red, float green, float blue, float alpha);
	public void glClearDepth(double depth);
	public void glClearStencil(int s);
	public void glClipPlane(int plane, java.nio.ByteBuffer equation);
	public void glClipPlane(int plane, java.nio.DoubleBuffer equation);
	public void glColor3(java.nio.DoubleBuffer v);
	public void glColor3(java.nio.FloatBuffer v);
	public void glColor3(java.nio.IntBuffer v);
	public void glColor3(java.nio.ShortBuffer v);
	public void glColor3b(java.nio.ByteBuffer v);
	public void glColor3b(byte red, byte green, byte blue);
	public void glColor3d(java.nio.ByteBuffer v);
	public void glColor3d(double red, double green, double blue);
	public void glColor3f(java.nio.ByteBuffer v);
	public void glColor3f(float red, float green, float blue);
	public void glColor3i(java.nio.ByteBuffer v);
	public void glColor3i(int red, int green, int blue);
	public void glColor3s(java.nio.ByteBuffer v);
	public void glColor3s(short red, short green, short blue);
	public void glColor3u(java.nio.IntBuffer v);
	public void glColor3u(java.nio.ShortBuffer v);
	public void glColor3ub(java.nio.ByteBuffer v);
	public void glColor3ub(byte red, byte green, byte blue);
	public void glColor3ui(java.nio.ByteBuffer v);
	public void glColor3ui(int red, int green, int blue);
	public void glColor3us(java.nio.ByteBuffer v);
	public void glColor3us(short red, short green, short blue);
	public void glColor4(java.nio.DoubleBuffer v);
	public void glColor4(java.nio.FloatBuffer v);
	public void glColor4(java.nio.IntBuffer v);
	public void glColor4(java.nio.ShortBuffer v);
	public void glColor4b(java.nio.ByteBuffer v);
	public void glColor4b(byte red, byte green, byte blue, byte alpha);
	public void glColor4d(java.nio.ByteBuffer v);
	public void glColor4d(double red, double green, double blue, double alpha);
	public void glColor4f(java.nio.ByteBuffer v);
	public void glColor4f(float red, float green, float blue, float alpha);
	public void glColor4i(java.nio.ByteBuffer v);
	public void glColor4i(int red, int green, int blue, int alpha);
	public void glColor4s(java.nio.ByteBuffer v);
	public void glColor4s(short red, short green, short blue, short alpha);
	public void glColor4u(java.nio.IntBuffer v);
	public void glColor4u(java.nio.ShortBuffer v);
	public void glColor4ub(java.nio.ByteBuffer v);
	public void glColor4ub(byte red, byte green, byte blue, byte alpha);
	public void glColor4ui(java.nio.ByteBuffer v);
	public void glColor4ui(int red, int green, int blue, int alpha);
	public void glColor4us(java.nio.ByteBuffer v);
	public void glColor4us(short red, short green, short blue, short alpha);
	public void glColorMask(boolean red, boolean green, boolean blue, boolean alpha);
	public void glColorMaterial(int face, int mode);
	public void glColorPointer(int size, boolean unsigned, int stride, java.nio.ByteBuffer pointer);
	public void glColorPointer(int size, int stride, java.nio.FloatBuffer pointer);
	public void glColorPointer(int size, int type, int stride, java.nio.ByteBuffer pointer);
	public void glColorPointer(int size, int type, int stride, long pointerOffset);
	public void glCopyPixels(int x, int y, int width, int height, int type);
	public void glCopyTexImage1D(int target, int level, int internalFormat, int x, int y, int width, int border);
	public void glCopyTexImage2D(int target, int level, int internalFormat, int x, int y, int width, int height, int border);
	public void glCopyTexSubImage1D(int target, int level, int xoffset, int x, int y, int width);
	public void glCopyTexSubImage2D(int target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
	public void glCullFace(int mode);
	public void glDeleteLists(int list, int range);
	public void glDeleteTextures(int texture);
	public void glDeleteTextures(java.nio.IntBuffer textures);
	public void glDeleteTextures(int n, java.nio.ByteBuffer textures);
	public void glDepthFunc(int func);
	public void glDepthMask(boolean flag);
	public void glDepthRange(double zNear, double zFar);
	public void glDisable(int target);
	public void glDisableClientState(int array);
	public void glDrawArrays(int mode, int first, int count);
	public void glDrawBuffer(int buf);
	public void glDrawElements(int mode, java.nio.ByteBuffer indices);
	public void glDrawElements(int mode, java.nio.IntBuffer indices);
	public void glDrawElements(int mode, int type, java.nio.ByteBuffer indices);
	public void glDrawElements(int mode, int count, int type, java.nio.ByteBuffer indices);
	public void glDrawElements(int mode, int count, int type, long indicesOffset);
	public void glDrawElements(int mode, java.nio.ShortBuffer indices);
	public void glDrawPixels(int width, int height, int format, int type, java.nio.ByteBuffer pixels);
	public void glDrawPixels(int width, int height, int format, int type, java.nio.FloatBuffer pixels);
	public void glDrawPixels(int width, int height, int format, int type, java.nio.IntBuffer pixels);
	public void glDrawPixels(int width, int height, int format, int type, long pixelsOffset);
	public void glDrawPixels(int width, int height, int format, int type, java.nio.ShortBuffer pixels);
	public void glEdgeFlag(boolean flag);
	public void glEdgeFlag(java.nio.ByteBuffer flag);
	public void glEdgeFlagPointer(int stride, java.nio.ByteBuffer pointer);
	public void glEdgeFlagPointer(int stride, long pointerOffset);
	public void glEnable(int target);
	public void glEnableClientState(int array);
	public void glEnd();
	public void glEndList();
	public void glEvalCoord1(java.nio.DoubleBuffer u);
	public void glEvalCoord1(java.nio.FloatBuffer u);
	public void glEvalCoord1d(java.nio.ByteBuffer u);
	public void glEvalCoord1d(double u);
	public void glEvalCoord1f(java.nio.ByteBuffer u);
	public void glEvalCoord1f(float u);
	public void glEvalCoord2(java.nio.DoubleBuffer u);
	public void glEvalCoord2(java.nio.FloatBuffer u);
	public void glEvalCoord2d(java.nio.ByteBuffer u);
	public void glEvalCoord2d(double u, double v);
	public void glEvalCoord2f(java.nio.ByteBuffer u);
	public void glEvalCoord2f(float u, float v);
	public void glEvalMesh1(int mode, int i1, int i2);
	public void glEvalMesh2(int mode, int i1, int i2, int j1, int j2);
	public void glEvalPoint1(int i);
	public void glEvalPoint2(int i, int j);
	public void glFeedbackBuffer(int type, java.nio.FloatBuffer buffer);
	public void glFeedbackBuffer(int size, int type, java.nio.ByteBuffer buffer);
	public void glFinish();
	public void glFlush();
	public void glFog(int pname, java.nio.FloatBuffer params);
	public void glFog(int pname, java.nio.IntBuffer params);
	public void glFogf(int pname, java.nio.ByteBuffer params);
	public void glFogf(int pname, float param);
	public void glFogi(int pname, java.nio.ByteBuffer params);
	public void glFogi(int pname, int param);
	public void glFrontFace(int dir);
	public void glFrustum(double l, double r, double b, double t, double n, double f);
	public int glGenLists(int s);
	public int glGenTextures();
	public void glGenTextures(java.nio.IntBuffer textures);
	public void glGenTextures(int n, java.nio.ByteBuffer textures);
	public boolean glGetBoolean(int pname);
	public void glGetBoolean(int pname, java.nio.ByteBuffer params);
	public void glGetClipPlane(int plane, java.nio.ByteBuffer equation);
	public void glGetClipPlane(int plane, java.nio.DoubleBuffer equation);
	public double glGetDouble(int pname);
	public void glGetDouble(int pname, java.nio.ByteBuffer params);
	public void glGetDouble(int pname, java.nio.DoubleBuffer params);
	public int glGetError();
	public float glGetFloat(int pname);
	public void glGetFloat(int pname, java.nio.ByteBuffer params);
	public void glGetFloat(int pname, java.nio.FloatBuffer params);
	public int glGetInteger(int pname);
	public void glGetInteger(int pname, java.nio.ByteBuffer params);
	public void glGetInteger(int pname, java.nio.IntBuffer params);
	public void glGetLight(int light, int pname, java.nio.FloatBuffer data);
	public void glGetLight(int light, int pname, java.nio.IntBuffer data);
	public float glGetLightf(int light, int pname);
	public void glGetLightf(int light, int pname, java.nio.ByteBuffer data);
	public int glGetLighti(int light, int pname);
	public void glGetLighti(int light, int pname, java.nio.ByteBuffer data);
	public void glGetMap(int target, int query, java.nio.DoubleBuffer data);
	public void glGetMap(int target, int query, java.nio.FloatBuffer data);
	public void glGetMap(int target, int query, java.nio.IntBuffer data);
	public double glGetMapd(int target, int query);
	public void glGetMapd(int target, int query, java.nio.ByteBuffer data);
	public float glGetMapf(int target, int query);
	public void glGetMapf(int target, int query, java.nio.ByteBuffer data);
	public int glGetMapi(int target, int query);
	public void glGetMapi(int target, int query, java.nio.ByteBuffer data);
	public void glGetMaterial(int face, int pname, java.nio.FloatBuffer data);
	public void glGetMaterial(int face, int pname, java.nio.IntBuffer data);
	public void glGetMaterialf(int face, int pname, java.nio.ByteBuffer data);
	public void glGetMateriali(int face, int pname, java.nio.ByteBuffer data);
	public void glGetPixelMap(int map, java.nio.FloatBuffer data);
	public void glGetPixelMapf(int map, java.nio.ByteBuffer data);
	public void glGetPixelMapf(int map, long dataOffset);
	public void glGetPixelMapu(int map, java.nio.IntBuffer data);
	public void glGetPixelMapu(int map, java.nio.ShortBuffer data);
	public void glGetPixelMapui(int map, java.nio.ByteBuffer data);
	public void glGetPixelMapui(int map, long dataOffset);
	public void glGetPixelMapus(int map, java.nio.ByteBuffer data);
	public void glGetPixelMapus(int map, long dataOffset);
	public long glGetPointer(int pname);
	public void glGetPointer(int pname, java.nio.ByteBuffer params);
	public void glGetPointer(int pname, PointerBuffer params);
	public void glGetPolygonStipple(java.nio.ByteBuffer pattern);
	public void glGetPolygonStipple(long patternOffset);
	public java.lang.String glGetString(int name);
	public void glGetTexEnv(int env, int pname, java.nio.FloatBuffer data);
	public void glGetTexEnv(int env, int pname, java.nio.IntBuffer data);
	public float glGetTexEnvf(int env, int pname);
	public void glGetTexEnvf(int env, int pname, java.nio.ByteBuffer data);
	public int glGetTexEnvi(int env, int pname);
	public void glGetTexEnvi(int env, int pname, java.nio.ByteBuffer data);
	public void glGetTexGen(int coord, int pname, java.nio.DoubleBuffer data);
	public void glGetTexGen(int coord, int pname, java.nio.FloatBuffer data);
	public void glGetTexGen(int coord, int pname, java.nio.IntBuffer data);
	public double glGetTexGend(int coord, int pname);
	public void glGetTexGend(int coord, int pname, java.nio.ByteBuffer data);
	public float glGetTexGenf(int coord, int pname);
	public void glGetTexGenf(int coord, int pname, java.nio.ByteBuffer data);
	public int glGetTexGeni(int coord, int pname);
	public void glGetTexGeni(int coord, int pname, java.nio.ByteBuffer data);
	public void glGetTexImage(int tex, int level, int format, int type, java.nio.ByteBuffer pixels);
	public void glGetTexImage(int tex, int level, int format, int type, java.nio.DoubleBuffer pixels);
	public void glGetTexImage(int tex, int level, int format, int type, java.nio.FloatBuffer pixels);
	public void glGetTexImage(int tex, int level, int format, int type, java.nio.IntBuffer pixels);
	public void glGetTexImage(int tex, int level, int format, int type, long pixelsOffset);
	public void glGetTexImage(int tex, int level, int format, int type, java.nio.ShortBuffer pixels);
	public void glGetTexLevelParameter(int target, int level, int pname, java.nio.FloatBuffer params);
	public void glGetTexLevelParameter(int target, int level, int pname, java.nio.IntBuffer params);
	public float glGetTexLevelParameterf(int target, int level, int pname);
	public void glGetTexLevelParameterf(int target, int level, int pname, java.nio.ByteBuffer params);
	public int glGetTexLevelParameteri(int target, int level, int pname);
	public void glGetTexLevelParameteri(int target, int level, int pname, java.nio.ByteBuffer params);
	public void glGetTexParameter(int target, int pname, java.nio.FloatBuffer params);
	public void glGetTexParameter(int target, int pname, java.nio.IntBuffer params);
	public float glGetTexParameterf(int target, int pname);
	public void glGetTexParameterf(int target, int pname, java.nio.ByteBuffer params);
	public int glGetTexParameteri(int target, int pname);
	public void glGetTexParameteri(int target, int pname, java.nio.ByteBuffer params);
	public void glHint(int target, int hint);
	public void glInitNames();
	public void glInterleavedArrays(int format, int stride, java.nio.ByteBuffer pointer);
	public void glInterleavedArrays(int format, int stride, java.nio.DoubleBuffer pointer);
	public void glInterleavedArrays(int format, int stride, java.nio.FloatBuffer pointer);
	public void glInterleavedArrays(int format, int stride, java.nio.IntBuffer pointer);
	public void glInterleavedArrays(int format, int stride, long pointerOffset);
	public void glInterleavedArrays(int format, int stride, java.nio.ShortBuffer pointer);
	public boolean glIsEnabled(int cap);
	public boolean glIsList(int list);
	public boolean glIsTexture(int texture);
	public void glLight(int light, int pname, java.nio.FloatBuffer params);
	public void glLight(int light, int pname, java.nio.IntBuffer params);
	public void glLightf(int light, int pname, java.nio.ByteBuffer params);
	public void glLightf(int light, int pname, float param);
	public void glLighti(int light, int pname, java.nio.ByteBuffer params);
	public void glLighti(int light, int pname, int param);
	public void glLightModel(int pname, java.nio.FloatBuffer params);
	public void glLightModel(int pname, java.nio.IntBuffer params);
	public void glLightModelf(int pname, java.nio.ByteBuffer params);
	public void glLightModelf(int pname, float param);
	public void glLightModeli(int pname, java.nio.ByteBuffer params);
	public void glLightModeli(int pname, int param);
	public void glLineStipple(int factor, short pattern);
	public void glLineWidth(float width);
	public void glListBase(int base);
	public void glLoadIdentity();
	public void glLoadMatrix(java.nio.DoubleBuffer m);
	public void glLoadMatrix(java.nio.FloatBuffer m);
	public void glLoadMatrixd(java.nio.ByteBuffer m);
	public void glLoadMatrixf(java.nio.ByteBuffer m);
	public void glLoadName(int name);
	public void glLogicOp(int op);
	public void glMap1(int target, double u1, double u2, int stride, int order, java.nio.DoubleBuffer points);
	public void glMap1(int target, float u1, float u2, int stride, int order, java.nio.FloatBuffer points);
	public void glMap1d(int target, double u1, double u2, int stride, int order, java.nio.ByteBuffer points);
	public void glMap1f(int target, float u1, float u2, int stride, int order, java.nio.ByteBuffer points);
	public void glMap2(int target, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, java.nio.DoubleBuffer points);
	public void glMap2(int target, float u1, float u2, int ustride, int uorder, float v1, float v2, int vstride, int vorder, java.nio.FloatBuffer points);
	public void glMap2d(int target, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, java.nio.ByteBuffer points);
	public void glMap2f(int target, float u1, float u2, int ustride, int uorder, float v1, float v2, int vstride, int vorder, java.nio.ByteBuffer points);
	public void glMapGrid1d(int n, double u1, double u2);
	public void glMapGrid1f(int n, float u1, float u2);
	public void glMapGrid2d(int un, double u1, double u2, int vn, double v1, double v2);
	public void glMapGrid2f(int un, float u1, float u2, int vn, float v1, float v2);
	public void glMaterial(int face, int pname, java.nio.FloatBuffer params);
	public void glMaterial(int face, int pname, java.nio.IntBuffer params);
	public void glMaterialf(int face, int pname, java.nio.ByteBuffer params);
	public void glMaterialf(int face, int pname, float param);
	public void glMateriali(int face, int pname, java.nio.ByteBuffer params);
	public void glMateriali(int face, int pname, int param);
	public void glMatrixMode(int mode);
	public void glMultMatrix(java.nio.DoubleBuffer m);
	public void glMultMatrix(java.nio.FloatBuffer m);
	public void glMultMatrixd(java.nio.ByteBuffer m);
	public void glMultMatrixf(java.nio.ByteBuffer m);
	public void glNewList(int n, int mode);
	public void glNormal3(java.nio.DoubleBuffer v);
	public void glNormal3(java.nio.FloatBuffer v);
	public void glNormal3(java.nio.IntBuffer v);
	public void glNormal3(java.nio.ShortBuffer v);
	public void glNormal3b(java.nio.ByteBuffer v);
	public void glNormal3b(byte nx, byte ny, byte nz);
	public void glNormal3d(java.nio.ByteBuffer v);
	public void glNormal3d(double nx, double ny, double nz);
	public void glNormal3f(java.nio.ByteBuffer v);
	public void glNormal3f(float nx, float ny, float nz);
	public void glNormal3i(java.nio.ByteBuffer v);
	public void glNormal3i(int nx, int ny, int nz);
	public void glNormal3s(java.nio.ByteBuffer v);
	public void glNormal3s(short nx, short ny, short nz);
	public void glNormalPointer(int stride, java.nio.ByteBuffer pointer);
	public void glNormalPointer(int stride, java.nio.FloatBuffer pointer);
	public void glNormalPointer(int type, int stride, java.nio.ByteBuffer pointer);
	public void glNormalPointer(int type, int stride, long pointerOffset);
	public void glNormalPointer(int stride, java.nio.ShortBuffer pointer);
	public void glOrtho(double l, double r, double b, double t, double n, double f);
	public void glPassThrough(float token);
	public void glPixelMap(int map, java.nio.FloatBuffer values);
	public void glPixelMapf(int map, int size, java.nio.ByteBuffer values);
	public void glPixelMapf(int map, int size, long valuesOffset);
	public void glPixelMapu(int map, java.nio.IntBuffer values);
	public void glPixelMapu(int map, java.nio.ShortBuffer values);
	public void glPixelMapui(int map, int size, java.nio.ByteBuffer values);
	public void glPixelMapui(int map, int size, long valuesOffset);
	public void glPixelMapus(int map, int size, java.nio.ByteBuffer values);
	public void glPixelMapus(int map, int size, long valuesOffset);
	public void glPixelStoref(int pname, int param);
	public void glPixelStorei(int pname, int param);
	public void glPixelTransferf(int pname, float param);
	public void glPixelTransferi(int pname, int param);
	public void glPixelZoom(float xfactor, float yfactor);
	public void glPointSize(float size);
	public void glPolygonMode(int face, int mode);
	public void glPolygonOffset(float factor, float units);
	public void glPolygonStipple(java.nio.ByteBuffer pattern);
	public void glPolygonStipple(long patternOffset);
	public void glPopAttrib();
	public void glPopClientAttrib();
	public void glPopMatrix();
	public void glPopName();
	public void glPrioritizeTextures(java.nio.IntBuffer textures, java.nio.FloatBuffer priorities);
	public void glPrioritizeTextures(int n, java.nio.ByteBuffer textures, java.nio.ByteBuffer priorities);
	public void glPushAttrib(int mask);
	public void glPushClientAttrib(int mask);
	public void glPushMatrix();
	public void glPushName(int name);
	public void glRasterPos2(java.nio.DoubleBuffer coords);
	public void glRasterPos2(java.nio.FloatBuffer coords);
	public void glRasterPos2(java.nio.IntBuffer coords);
	public void glRasterPos2(java.nio.ShortBuffer coords);
	public void glRasterPos2d(java.nio.ByteBuffer coords);
	public void glRasterPos2d(double x, double y);
	public void glRasterPos2f(java.nio.ByteBuffer coords);
	public void glRasterPos2f(float x, float y);
	public void glRasterPos2i(java.nio.ByteBuffer coords);
	public void glRasterPos2i(int x, int y);
	public void glRasterPos2s(java.nio.ByteBuffer coords);
	public void glRasterPos2s(short x, short y);
	public void glRasterPos3(java.nio.DoubleBuffer coords);
	public void glRasterPos3(java.nio.FloatBuffer coords);
	public void glRasterPos3(java.nio.IntBuffer coords);
	public void glRasterPos3(java.nio.ShortBuffer coords);
	public void glRasterPos3d(java.nio.ByteBuffer coords);
	public void glRasterPos3d(double x, double y, double z);
	public void glRasterPos3f(java.nio.ByteBuffer coords);
	public void glRasterPos3f(float x, float y, float z);
	public void glRasterPos3i(java.nio.ByteBuffer coords);
	public void glRasterPos3i(int x, int y, int z);
	public void glRasterPos3s(java.nio.ByteBuffer coords);
	public void glRasterPos3s(short x, short y, short z);
	public void glRasterPos4(java.nio.DoubleBuffer coords);
	public void glRasterPos4(java.nio.FloatBuffer coords);
	public void glRasterPos4(java.nio.IntBuffer coords);
	public void glRasterPos4(java.nio.ShortBuffer coords);
	public void glRasterPos4d(java.nio.ByteBuffer coords);
	public void glRasterPos4d(double x, double y, double z, double w);
	public void glRasterPos4f(java.nio.ByteBuffer coords);
	public void glRasterPos4f(float x, float y, float z, float w);
	public void glRasterPos4i(java.nio.ByteBuffer coords);
	public void glRasterPos4i(int x, int y, int z, int w);
	public void glRasterPos4s(java.nio.ByteBuffer coords);
	public void glRasterPos4s(short x, short y, short z, short w);
	public void glReadBuffer(int src);
	public void glReadPixels(int x, int y, int width, int height, int format, int type, java.nio.ByteBuffer pixels);
	public void glReadPixels(int x, int y, int width, int height, int format, int type, java.nio.FloatBuffer pixels);
	public void glReadPixels(int x, int y, int width, int height, int format, int type, java.nio.IntBuffer pixels);
	public void glReadPixels(int x, int y, int width, int height, int format, int type, long pixelsOffset);
	public void glReadPixels(int x, int y, int width, int height, int format, int type, java.nio.ShortBuffer pixels);
	public void glRect(java.nio.DoubleBuffer v1, java.nio.DoubleBuffer v2);
	public void glRect(java.nio.FloatBuffer v1, java.nio.FloatBuffer v2);
	public void glRect(java.nio.IntBuffer v1, java.nio.IntBuffer v2);
	public void glRect(java.nio.ShortBuffer v1, java.nio.ShortBuffer v2);
	public void glRectd(java.nio.ByteBuffer v1, java.nio.ByteBuffer v2);
	public void glRectd(double x1, double y1, double x2, double y2);
	public void glRectf(java.nio.ByteBuffer v1, java.nio.ByteBuffer v2);
	public void glRectf(float x1, float y1, float x2, float y2);
	public void glRecti(java.nio.ByteBuffer v1, java.nio.ByteBuffer v2);
	public void glRecti(int x1, int y1, int x2, int y2);
	public void glRects(java.nio.ByteBuffer v1, java.nio.ByteBuffer v2);
	public void glRects(short x1, short y1, short x2, short y2);
	public int glRenderMode(int mode);
	public void glRotated(double angle, double x, double y, double z);
	public void glRotatef(float angle, float x, float y, float z);
	public void glScaled(double x, double y, double z);
	public void glScalef(float x, float y, float z);
	public void glScissor(int x, int y, int width, int height);
	public void glSelectBuffer(java.nio.IntBuffer buffer);
	public void glSelectBuffer(int size, java.nio.ByteBuffer buffer);
	public void glShadeModel(int mode);
	public void glStencilFunc(int func, int ref, int mask);
	public void glStencilMask(int mask);
	public void glStencilOp(int sfail, int dpfail, int dppass);
	public void glTexCoord1(java.nio.DoubleBuffer v);
	public void glTexCoord1(java.nio.FloatBuffer v);
	public void glTexCoord1(java.nio.IntBuffer v);
	public void glTexCoord1(java.nio.ShortBuffer v);
	public void glTexCoord1d(java.nio.ByteBuffer v);
	public void glTexCoord1d(double s);
	public void glTexCoord1f(java.nio.ByteBuffer v);
	public void glTexCoord1f(float s);
	public void glTexCoord1i(java.nio.ByteBuffer v);
	public void glTexCoord1i(int s);
	public void glTexCoord1s(java.nio.ByteBuffer v);
	public void glTexCoord1s(short s);
	public void glTexCoord2(java.nio.DoubleBuffer v);
	public void glTexCoord2(java.nio.FloatBuffer v);
	public void glTexCoord2(java.nio.IntBuffer v);
	public void glTexCoord2(java.nio.ShortBuffer v);
	public void glTexCoord2d(java.nio.ByteBuffer v);
	public void glTexCoord2d(double s, double t);
	public void glTexCoord2f(java.nio.ByteBuffer v);
	public void glTexCoord2f(float s, float t);
	public void glTexCoord2i(java.nio.ByteBuffer v);
	public void glTexCoord2i(int s, int t);
	public void glTexCoord2s(java.nio.ByteBuffer v);
	public void glTexCoord2s(short s, short t);
	public void glTexCoord3(java.nio.DoubleBuffer v);
	public void glTexCoord3(java.nio.FloatBuffer v);
	public void glTexCoord3(java.nio.IntBuffer v);
	public void glTexCoord3(java.nio.ShortBuffer v);
	public void glTexCoord3d(java.nio.ByteBuffer v);
	public void glTexCoord3d(double s, double t, double r);
	public void glTexCoord3f(java.nio.ByteBuffer v);
	public void glTexCoord3f(float s, float t, float r);
	public void glTexCoord3i(java.nio.ByteBuffer v);
	public void glTexCoord3i(int s, int t, int r);
	public void glTexCoord3s(java.nio.ByteBuffer v);
	public void glTexCoord3s(short s, short t, short r);
	public void glTexCoord4(java.nio.DoubleBuffer v);
	public void glTexCoord4(java.nio.FloatBuffer v);
	public void glTexCoord4(java.nio.IntBuffer v);
	public void glTexCoord4(java.nio.ShortBuffer v);
	public void glTexCoord4d(java.nio.ByteBuffer v);
	public void glTexCoord4d(double s, double t, double r, double q);
	public void glTexCoord4f(java.nio.ByteBuffer v);
	public void glTexCoord4f(float s, float t, float r, float q);
	public void glTexCoord4i(java.nio.ByteBuffer v);
	public void glTexCoord4i(int s, int t, int r, int q);
	public void glTexCoord4s(java.nio.ByteBuffer v);
	public void glTexCoord4s(short s, short t, short r, short q);
	public void glTexCoordPointer(int size, int stride, java.nio.FloatBuffer pointer);
	public void glTexCoordPointer(int size, int type, int stride, java.nio.ByteBuffer pointer);
	public void glTexCoordPointer(int size, int type, int stride, long pointerOffset);
	public void glTexCoordPointer(int size, int stride, java.nio.ShortBuffer pointer);
	public void glTexEnv(int target, int pname, java.nio.FloatBuffer params);
	public void glTexEnv(int target, int pname, java.nio.IntBuffer params);
	public void glTexEnvf(int target, int pname, java.nio.ByteBuffer params);
	public void glTexEnvf(int target, int pname, float param);
	public void glTexEnvi(int target, int pname, java.nio.ByteBuffer params);
	public void glTexEnvi(int target, int pname, int param);
	public void glTexGen(int coord, int pname, java.nio.DoubleBuffer params);
	public void glTexGen(int coord, int pname, java.nio.FloatBuffer params);
	public void glTexGen(int coord, int pname, java.nio.IntBuffer params);
	public void glTexGend(int coord, int pname, java.nio.ByteBuffer params);
	public void glTexGend(int coord, int pname, double param);
	public void glTexGenf(int coord, int pname, java.nio.ByteBuffer params);
	public void glTexGenf(int coord, int pname, float param);
	public void glTexGeni(int coord, int pname, java.nio.ByteBuffer params);
	public void glTexGeni(int coord, int pname, int param);
	public void glTexImage1D(int target, int level, int internalformat, int width, int border, int format, int type, java.nio.ByteBuffer pixels);
	public void glTexImage1D(int target, int level, int internalformat, int width, int border, int format, int type, java.nio.DoubleBuffer pixels);
	public void glTexImage1D(int target, int level, int internalformat, int width, int border, int format, int type, java.nio.FloatBuffer pixels);
	public void glTexImage1D(int target, int level, int internalformat, int width, int border, int format, int type, java.nio.IntBuffer pixels);
	public void glTexImage1D(int target, int level, int internalformat, int width, int border, int format, int type, long pixelsOffset);
	public void glTexImage1D(int target, int level, int internalformat, int width, int border, int format, int type, java.nio.ShortBuffer pixels);
	public void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, java.nio.ByteBuffer pixels);
	public void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, java.nio.DoubleBuffer pixels);
	public void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, java.nio.FloatBuffer pixels);
	public void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, java.nio.IntBuffer pixels);
	public void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, long pixelsOffset);
	public void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, java.nio.ShortBuffer pixels);
	public void glTexParameter(int target, int pname, java.nio.FloatBuffer params);
	public void glTexParameter(int target, int pname, java.nio.IntBuffer params);
	public void glTexParameterf(int target, int pname, java.nio.ByteBuffer params);
	public void glTexParameterf(int target, int pname, float param);
	public void glTexParameteri(int target, int pname, java.nio.ByteBuffer params);
	public void glTexParameteri(int target, int pname, int param);
	public void glTexSubImage1D(int target, int level, int xoffset, int width, int format, int type, java.nio.ByteBuffer pixels);
	public void glTexSubImage1D(int target, int level, int xoffset, int width, int format, int type, java.nio.DoubleBuffer pixels);
	public void glTexSubImage1D(int target, int level, int xoffset, int width, int format, int type, java.nio.FloatBuffer pixels);
	public void glTexSubImage1D(int target, int level, int xoffset, int width, int format, int type, java.nio.IntBuffer pixels);
	public void glTexSubImage1D(int target, int level, int xoffset, int width, int format, int type, long pixelsOffset);
	public void glTexSubImage1D(int target, int level, int xoffset, int width, int format, int type, java.nio.ShortBuffer pixels);
	public void glTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, java.nio.ByteBuffer pixels);
	public void glTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, java.nio.DoubleBuffer pixels);
	public void glTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, java.nio.FloatBuffer pixels);
	public void glTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, java.nio.IntBuffer pixels);
	public void glTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, long pixelsOffset);
	public void glTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, java.nio.ShortBuffer pixels);
	public void glTranslated(double x, double y, double z);
	public void glTranslatef(float x, float y, float z);
	public void glVertex2(java.nio.DoubleBuffer coords);
	public void glVertex2(java.nio.FloatBuffer coords);
	public void glVertex2(java.nio.IntBuffer coords);
	public void glVertex2(java.nio.ShortBuffer coords);
	public void glVertex2d(java.nio.ByteBuffer coords);
	public void glVertex2d(double x, double y);
	public void glVertex2f(java.nio.ByteBuffer coords);
	public void glVertex2f(float x, float y);
	public void glVertex2i(java.nio.ByteBuffer coords);
	public void glVertex2i(int x, int y);
	public void glVertex2s(java.nio.ByteBuffer coords);
	public void glVertex2s(short x, short y);
	public void glVertex3(java.nio.DoubleBuffer coords);
	public void glVertex3(java.nio.FloatBuffer coords);
	public void glVertex3(java.nio.IntBuffer coords);
	public void glVertex3(java.nio.ShortBuffer coords);
	public void glVertex3d(java.nio.ByteBuffer coords);
	public void glVertex3d(double x, double y, double z);
	public void glVertex3f(java.nio.ByteBuffer coords);
	public void glVertex3f(float x, float y, float z);
	public void glVertex3i(java.nio.ByteBuffer coords);
	public void glVertex3i(int x, int y, int z);
	public void glVertex3s(java.nio.ByteBuffer coords);
	public void glVertex3s(short x, short y, short z);
	public void glVertex4(java.nio.DoubleBuffer coords);
	public void glVertex4(java.nio.FloatBuffer coords);
	public void glVertex4(java.nio.IntBuffer coords);
	public void glVertex4(java.nio.ShortBuffer coords);
	public void glVertex4d(java.nio.ByteBuffer coords);
	public void glVertex4d(double x, double y, double z, double w);
	public void glVertex4f(java.nio.ByteBuffer coords);
	public void glVertex4f(float x, float y, float z, float w);
	public void glVertex4i(java.nio.ByteBuffer coords);
	public void glVertex4i(int x, int y, int z, int w);
	public void glVertex4s(java.nio.ByteBuffer coords);
	public void glVertex4s(short x, short y, short z, short w);
	public void glVertexPointer(int size, int stride, java.nio.DoubleBuffer pointer);
	public void glVertexPointer(int size, int stride, java.nio.FloatBuffer pointer);
	public void glVertexPointer(int size, int stride, java.nio.IntBuffer pointer);
	public void glVertexPointer(int size, int type, int stride, java.nio.ByteBuffer pointer);
	public void glVertexPointer(int size, int type, int stride, long pointerOffset);
	public void glVertexPointer(int size, int stride, java.nio.ShortBuffer pointer);
	public void glViewport(int x, int y, int w, int h);
	public void glCopyTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
	public void glDrawRangeElements(int mode, int start, int end, java.nio.ByteBuffer indices);
	public void glDrawRangeElements(int mode, int start, int end, java.nio.IntBuffer indices);
	public void glDrawRangeElements(int mode, int start, int end, int type, java.nio.ByteBuffer indices);
	public void glDrawRangeElements(int mode, int start, int end, int count, int type, java.nio.ByteBuffer indices);
	public void glDrawRangeElements(int mode, int start, int end, int count, int type, long indicesOffset);
	public void glDrawRangeElements(int mode, int start, int end, java.nio.ShortBuffer indices);
	public void glTexImage3D(int target, int level, int internalformat, int width, int height, int depth, int border, int format, int type, java.nio.ByteBuffer pixels);
	public void glTexImage3D(int target, int level, int internalformat, int width, int height, int depth, int border, int format, int type, java.nio.DoubleBuffer pixels);
	public void glTexImage3D(int target, int level, int internalformat, int width, int height, int depth, int border, int format, int type, java.nio.FloatBuffer pixels);
	public void glTexImage3D(int target, int level, int internalformat, int width, int height, int depth, int border, int format, int type, java.nio.IntBuffer pixels);
	public void glTexImage3D(int target, int level, int internalformat, int width, int height, int depth, int border, int format, int type, long pixelsOffset);
	public void glTexImage3D(int target, int level, int internalformat, int width, int height, int depth, int border, int format, int type, java.nio.ShortBuffer pixels);
	public void glTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int type, java.nio.ByteBuffer pixels);
	public void glTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int type, java.nio.DoubleBuffer pixels);
	public void glTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int type, java.nio.FloatBuffer pixels);
	public void glTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int type, java.nio.IntBuffer pixels);
	public void glTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int type, long pixelsOffset);
	public void glTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int type, java.nio.ShortBuffer pixels);
	public void glActiveTexture(int texture);
	public void glClientActiveTexture(int texture);
	public void glCompressedTexImage1D(int target, int level, int internalformat, int width, int border, java.nio.ByteBuffer data);
	public void glCompressedTexImage1D(int target, int level, int internalformat, int width, int border, int imageSize, java.nio.ByteBuffer data);
	public void glCompressedTexImage1D(int target, int level, int internalformat, int width, int border, int imageSize, long dataOffset);
	public void glCompressedTexImage2D(int target, int level, int internalformat, int width, int height, int border, java.nio.ByteBuffer data);
	public void glCompressedTexImage2D(int target, int level, int internalformat, int width, int height, int border, int imageSize, java.nio.ByteBuffer data);
	public void glCompressedTexImage2D(int target, int level, int internalformat, int width, int height, int border, int imageSize, long dataOffset);
	public void glCompressedTexImage3D(int target, int level, int internalformat, int width, int height, int depth, int border, java.nio.ByteBuffer data);
	public void glCompressedTexImage3D(int target, int level, int internalformat, int width, int height, int depth, int border, int imageSize, java.nio.ByteBuffer data);
	public void glCompressedTexImage3D(int target, int level, int internalformat, int width, int height, int depth, int border, int imageSize, long dataOffset);
	public void glCompressedTexSubImage1D(int target, int level, int xoffset, int width, int format, java.nio.ByteBuffer data);
	public void glCompressedTexSubImage1D(int target, int level, int xoffset, int width, int format, int imageSize, java.nio.ByteBuffer data);
	public void glCompressedTexSubImage1D(int target, int level, int xoffset, int width, int format, int imageSize, long dataOffset);
	public void glCompressedTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, java.nio.ByteBuffer data);
	public void glCompressedTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int imageSize, java.nio.ByteBuffer data);
	public void glCompressedTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int imageSize, long dataOffset);
	public void glCompressedTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, java.nio.ByteBuffer data);
	public void glCompressedTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int imageSize, java.nio.ByteBuffer data);
	public void glCompressedTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int imageSize, long dataOffset);
	public void glGetCompressedTexImage(int target, int level, java.nio.ByteBuffer pixels);
	public void glGetCompressedTexImage(int target, int level, long pixelsOffset);
	public void glLoadTransposeMatrix(java.nio.DoubleBuffer m);
	public void glLoadTransposeMatrix(java.nio.FloatBuffer m);
	public void glLoadTransposeMatrixd(java.nio.ByteBuffer m);
	public void glLoadTransposeMatrixf(java.nio.ByteBuffer m);
	public void glMultiTexCoord1(int texture, java.nio.DoubleBuffer v);
	public void glMultiTexCoord1(int texture, java.nio.FloatBuffer v);
	public void glMultiTexCoord1(int texture, java.nio.IntBuffer v);
	public void glMultiTexCoord1(int texture, java.nio.ShortBuffer v);
	public void glMultiTexCoord1d(int texture, java.nio.ByteBuffer v);
	public void glMultiTexCoord1d(int texture, double s);
	public void glMultiTexCoord1f(int texture, java.nio.ByteBuffer v);
	public void glMultiTexCoord1f(int texture, float s);
	public void glMultiTexCoord1i(int texture, java.nio.ByteBuffer v);
	public void glMultiTexCoord1i(int texture, int s);
	public void glMultiTexCoord1s(int texture, java.nio.ByteBuffer v);
	public void glMultiTexCoord1s(int texture, short s);
	public void glMultiTexCoord2(int texture, java.nio.DoubleBuffer v);
	public void glMultiTexCoord2(int texture, java.nio.FloatBuffer v);
	public void glMultiTexCoord2(int texture, java.nio.IntBuffer v);
	public void glMultiTexCoord2(int texture, java.nio.ShortBuffer v);
	public void glMultiTexCoord2d(int texture, java.nio.ByteBuffer v);
	public void glMultiTexCoord2d(int texture, double s, double t);
	public void glMultiTexCoord2f(int texture, java.nio.ByteBuffer v);
	public void glMultiTexCoord2f(int texture, float s, float t);
	public void glMultiTexCoord2i(int texture, java.nio.ByteBuffer v);
	public void glMultiTexCoord2i(int texture, int s, int t);
	public void glMultiTexCoord2s(int texture, java.nio.ByteBuffer v);
	public void glMultiTexCoord2s(int texture, short s, short t);
	public void glMultiTexCoord3(int texture, java.nio.DoubleBuffer v);
	public void glMultiTexCoord3(int texture, java.nio.FloatBuffer v);
	public void glMultiTexCoord3(int texture, java.nio.IntBuffer v);
	public void glMultiTexCoord3(int texture, java.nio.ShortBuffer v);
	public void glMultiTexCoord3d(int texture, java.nio.ByteBuffer v);
	public void glMultiTexCoord3d(int texture, double s, double t, double r);
	public void glMultiTexCoord3f(int texture, java.nio.ByteBuffer v);
	public void glMultiTexCoord3f(int texture, float s, float t, float r);
	public void glMultiTexCoord3i(int texture, java.nio.ByteBuffer v);
	public void glMultiTexCoord3i(int texture, int s, int t, int r);
	public void glMultiTexCoord3s(int texture, java.nio.ByteBuffer v);
	public void glMultiTexCoord3s(int texture, short s, short t, short r);
	public void glMultiTexCoord4(int texture, java.nio.DoubleBuffer v);
	public void glMultiTexCoord4(int texture, java.nio.FloatBuffer v);
	public void glMultiTexCoord4(int texture, java.nio.IntBuffer v);
	public void glMultiTexCoord4(int texture, java.nio.ShortBuffer v);
	public void glMultiTexCoord4d(int texture, java.nio.ByteBuffer v);
	public void glMultiTexCoord4d(int texture, double s, double t, double r, double q);
	public void glMultiTexCoord4f(int texture, java.nio.ByteBuffer v);
	public void glMultiTexCoord4f(int texture, float s, float t, float r, float q);
	public void glMultiTexCoord4i(int texture, java.nio.ByteBuffer v);
	public void glMultiTexCoord4i(int texture, int s, int t, int r, int q);
	public void glMultiTexCoord4s(int texture, java.nio.ByteBuffer v);
	public void glMultiTexCoord4s(int texture, short s, short t, short r, short q);
	public void glMultTransposeMatrix(java.nio.DoubleBuffer m);
	public void glMultTransposeMatrix(java.nio.FloatBuffer m);
	public void glMultTransposeMatrixd(java.nio.ByteBuffer m);
	public void glMultTransposeMatrixf(java.nio.ByteBuffer m);
	public void glSampleCoverage(float value, boolean invert);
	public void glBlendColor(float red, float green, float blue, float alpha);
	public void glBlendEquation(int mode);
	public void glBlendFuncSeparate(int sfactorRGB, int dfactorRGB, int sfactorAlpha, int dfactorAlpha);
	public void glFogCoord(java.nio.DoubleBuffer coord);
	public void glFogCoord(java.nio.FloatBuffer coord);
	public void glFogCoordd(java.nio.ByteBuffer coord);
	public void glFogCoordd(double coord);
	public void glFogCoordf(java.nio.ByteBuffer coord);
	public void glFogCoordf(float coord);
	public void glFogCoordPointer(int stride, java.nio.FloatBuffer pointer);
	public void glFogCoordPointer(int type, int stride, java.nio.ByteBuffer pointer);
	public void glFogCoordPointer(int type, int stride, long pointerOffset);
	public void glMultiDrawArrays(int mode, java.nio.ByteBuffer first, java.nio.ByteBuffer count, int primcount);
	public void glMultiDrawArrays(int mode, java.nio.IntBuffer first, java.nio.IntBuffer count);
	public void glMultiDrawElements(int mode, java.nio.ByteBuffer count, int type, java.nio.ByteBuffer indices, int primcount);
	public void glMultiDrawElements(int mode, java.nio.IntBuffer count, int type, PointerBuffer indices);
	public void glPointParameter(int pname, java.nio.FloatBuffer params);
	public void glPointParameter(int pname, java.nio.IntBuffer params);
	public void glPointParameterf(int pname, java.nio.ByteBuffer params);
	public void glPointParameterf(int pname, float param);
	public void glPointParameteri(int pname, java.nio.ByteBuffer params);
	public void glPointParameteri(int pname, int param);
	public void glSecondaryColor3(java.nio.DoubleBuffer v);
	public void glSecondaryColor3(java.nio.FloatBuffer v);
	public void glSecondaryColor3(java.nio.IntBuffer v);
	public void glSecondaryColor3(java.nio.ShortBuffer v);
	public void glSecondaryColor3b(java.nio.ByteBuffer v);
	public void glSecondaryColor3b(byte red, byte green, byte blue);
	public void glSecondaryColor3d(java.nio.ByteBuffer v);
	public void glSecondaryColor3d(double red, double green, double blue);
	public void glSecondaryColor3f(java.nio.ByteBuffer v);
	public void glSecondaryColor3f(float red, float green, float blue);
	public void glSecondaryColor3i(java.nio.ByteBuffer v);
	public void glSecondaryColor3i(int red, int green, int blue);
	public void glSecondaryColor3s(java.nio.ByteBuffer v);
	public void glSecondaryColor3s(short red, short green, short blue);
	public void glSecondaryColor3u(java.nio.IntBuffer v);
	public void glSecondaryColor3u(java.nio.ShortBuffer v);
	public void glSecondaryColor3ub(java.nio.ByteBuffer v);
	public void glSecondaryColor3ub(byte red, byte green, byte blue);
	public void glSecondaryColor3ui(java.nio.ByteBuffer v);
	public void glSecondaryColor3ui(int red, int green, int blue);
	public void glSecondaryColor3us(java.nio.ByteBuffer v);
	public void glSecondaryColor3us(short red, short green, short blue);
	public void glSecondaryColorPointer(int size, boolean unsigned, int stride, java.nio.ByteBuffer pointer);
	public void glSecondaryColorPointer(int size, int stride, java.nio.FloatBuffer pointer);
	public void glSecondaryColorPointer(int size, int type, int stride, java.nio.ByteBuffer pointer);
	public void glSecondaryColorPointer(int size, int type, int stride, long pointerOffset);
	public void glWindowPos2(java.nio.DoubleBuffer p);
	public void glWindowPos2(java.nio.FloatBuffer p);
	public void glWindowPos2(java.nio.IntBuffer p);
	public void glWindowPos2(java.nio.ShortBuffer p);
	public void glWindowPos2d(java.nio.ByteBuffer p);
	public void glWindowPos2d(double x, double y);
	public void glWindowPos2f(java.nio.ByteBuffer p);
	public void glWindowPos2f(float x, float y);
	public void glWindowPos2i(java.nio.ByteBuffer p);
	public void glWindowPos2i(int x, int y);
	public void glWindowPos2s(java.nio.ByteBuffer p);
	public void glWindowPos2s(short x, short y);
	public void glWindowPos3(java.nio.DoubleBuffer p);
	public void glWindowPos3(java.nio.FloatBuffer p);
	public void glWindowPos3(java.nio.IntBuffer p);
	public void glWindowPos3(java.nio.ShortBuffer p);
	public void glWindowPos3d(java.nio.ByteBuffer p);
	public void glWindowPos3d(double x, double y, double z);
	public void glWindowPos3f(java.nio.ByteBuffer p);
	public void glWindowPos3f(float x, float y, float z);
	public void glWindowPos3i(java.nio.ByteBuffer p);
	public void glWindowPos3i(int x, int y, int z);
	public void glWindowPos3s(java.nio.ByteBuffer p);
	public void glWindowPos3s(short x, short y, short z);
	public void glBeginQuery(int target, int id);
	public void glBindBuffer(int target, int buffer);
	public void glBufferData(int target, java.nio.ByteBuffer data, int usage);
	public void glBufferData(int target, java.nio.DoubleBuffer data, int usage);
	public void glBufferData(int target, java.nio.FloatBuffer data, int usage);
	public void glBufferData(int target, java.nio.IntBuffer data, int usage);
	public void glBufferData(int target, long size, java.nio.ByteBuffer data, int usage);
	public void glBufferData(int target, long size, int usage);
	public void glBufferData(int target, java.nio.ShortBuffer data, int usage);
	public void glBufferSubData(int target, long offset, java.nio.ByteBuffer data);
	public void glBufferSubData(int target, long offset, java.nio.DoubleBuffer data);
	public void glBufferSubData(int target, long offset, java.nio.FloatBuffer data);
	public void glBufferSubData(int target, long offset, java.nio.IntBuffer data);
	public void glBufferSubData(int target, long offset, long size, java.nio.ByteBuffer data);
	public void glBufferSubData(int target, long offset, java.nio.ShortBuffer data);
	public void glDeleteBuffers(int buffer);
	public void glDeleteBuffers(java.nio.IntBuffer buffers);
	public void glDeleteBuffers(int n, java.nio.ByteBuffer buffers);
	public void glDeleteQueries(int id);
	public void glDeleteQueries(java.nio.IntBuffer ids);
	public void glDeleteQueries(int n, java.nio.ByteBuffer ids);
	public void glEndQuery(int target);
	public int glGenBuffers();
	public void glGenBuffers(java.nio.IntBuffer buffers);
	public void glGenBuffers(int n, java.nio.ByteBuffer buffers);
	public int glGenQueries();
	public void glGenQueries(java.nio.IntBuffer ids);
	public void glGenQueries(int n, java.nio.ByteBuffer ids);
	public void glGetBufferParameter(int target, int pname, java.nio.IntBuffer params);
	public int glGetBufferParameteri(int target, int pname);
	public void glGetBufferParameteri(int target, int pname, java.nio.ByteBuffer params);
	public long glGetBufferPointer(int target, int pname);
	public void glGetBufferPointer(int target, int pname, java.nio.ByteBuffer params);
	public void glGetBufferPointer(int target, int pname, PointerBuffer params);
	public void glGetBufferSubData(int target, long offset, java.nio.ByteBuffer data);
	public void glGetBufferSubData(int target, long offset, java.nio.DoubleBuffer data);
	public void glGetBufferSubData(int target, long offset, java.nio.FloatBuffer data);
	public void glGetBufferSubData(int target, long offset, java.nio.IntBuffer data);
	public void glGetBufferSubData(int target, long offset, long size, java.nio.ByteBuffer data);
	public void glGetBufferSubData(int target, long offset, java.nio.ShortBuffer data);
	public void glGetQuery(int target, int pname, java.nio.IntBuffer params);
	public int glGetQueryi(int target, int pname);
	public void glGetQueryi(int target, int pname, java.nio.ByteBuffer params);
	public void glGetQueryObject(int id, int pname, java.nio.IntBuffer params);
	public int glGetQueryObjecti(int id, int pname);
	public void glGetQueryObjecti(int id, int pname, java.nio.ByteBuffer params);
	public void glGetQueryObjectu(int id, int pname, java.nio.IntBuffer params);
	public int glGetQueryObjectui(int id, int pname);
	public void glGetQueryObjectui(int id, int pname, java.nio.ByteBuffer params);
	public boolean glIsBuffer(int buffer);
	public boolean glIsQuery(int id);
	public java.nio.ByteBuffer glMapBuffer(int target, int access);
	public java.nio.ByteBuffer glMapBuffer(int target, int access, java.nio.ByteBuffer old_buffer);
	public java.nio.ByteBuffer glMapBuffer(int target, int access, int length, java.nio.ByteBuffer old_buffer);
	public boolean glUnmapBuffer(int target);
	public GL getContext();
}
