package gltools.gl;


public interface GL3 {
	public static final int GL_MAX_GEOMETRY_OUTPUT_VERTICES = 0x08DE0;
	public static final int GL_CLIP_DISTANCE0 = 0x03000;
	public static final int GL_CLIP_DISTANCE1 = 0x03001;
	public static final int GL_SEPARATE_ATTRIBS = 0x08C8D;
	public static final int GL_TEXTURE_LUMINANCE_TYPE = 0x08C14;
	public static final int GL_INT_SAMPLER_BUFFER = 0x08DD0;
	public static final int GL_UNSIGNED_INT_SAMPLER_BUFFER = 0x08DD8;
	public static final int GL_CLIP_DISTANCE6 = 0x03006;
	public static final int GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = 0x08C29;
	public static final int GL_CLIP_DISTANCE7 = 0x03007;
	public static final int GL_STENCIL_ATTACHMENT = 0x08D20;
	public static final int GL_CLIP_DISTANCE4 = 0x03004;
	public static final int GL_CLIP_DISTANCE5 = 0x03005;
	public static final int GL_CLIP_DISTANCE2 = 0x03002;
	public static final int GL_CLIP_DISTANCE3 = 0x03003;
	public static final int GL_MAP_FLUSH_EXPLICIT_BIT = 0x00010;
	public static final int GL_SAMPLER_1D_ARRAY_SHADOW = 0x08DC3;
	public static final int GL_ALPHA8I = 0x08D90;
	public static final int GL_RGB_INTEGER = 0x08D98;
	public static final int GL_FIRST_VERTEX_CONVENTION = 0x08E4D;
	public static final int GL_UNSIGNED_INT_10F_11F_11F_REV = 0x08C3B;
	public static final int GL_MAX_SAMPLES = 0x08D57;
	public static final int GL_SAMPLER_2D_MULTISAMPLE = 0x09108;
	public static final int GL_MAX_GEOMETRY_UNIFORM_BLOCKS = 0x08A2C;
	public static final int GL_MAX_GEOMETRY_UNIFORM_COMPONENTS = 0x08DDF;
	public static final int GL_RG32I = 0x0823B;
	public static final int GL_DEPTH_COMPONENT32F = 0x08CAC;
	public static final int GL_QUERY_WAIT = 0x08E13;
	public static final int GL_RG32F = 0x08230;
	public static final int GL_MAX_CLIP_DISTANCES = 0x00D32;
	public static final int GL_UNIFORM_SIZE = 0x08A38;
	public static final int GL_FRAMEBUFFER_SRGB_CAPABLE = 0x08DBA;
	public static final int GL_TEXTURE_BUFFER_DATA_STORE_BINDING = 0x08C2D;
	public static final int GL_MAP_WRITE_BIT = 0x00002;
	public static final int GL_TEXTURE_BINDING_2D_MULTISAMPLE = 0x09104;
	public static final int GL_SIGNED_NORMALIZED = 0x08F9C;
	public static final int GL_DEPTH_BUFFER = 0x08223;
	public static final int GL_PRIMITIVES_GENERATED = 0x08C87;
	public static final int GL_RG8_SNORM = 0x08F95;
	public static final int GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x08DD7;
	public static final int GL_BUFFER_MAP_OFFSET = 0x09121;
	public static final int GL_UNIFORM_ARRAY_STRIDE = 0x08A3C;
	public static final int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x08CD6;
	public static final int GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY = 0x09105;
	public static final int GL_DEPTH_STENCIL = 0x084F9;
	public static final int GL_SAMPLER_2D_RECT_SHADOW = 0x08B64;
	public static final int GL_SAMPLER_1D_ARRAY = 0x08DC0;
	public static final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x08CD2;
	public static final int GL_COLOR_ATTACHMENT9 = 0x08CE9;
	public static final int GL_SIGNALED = 0x09119;
	public static final int GL_INT_SAMPLER_2D_ARRAY = 0x08DCF;
	public static final int GL_TRANSFORM_FEEDBACK_BUFFER_START = 0x08C84;
	public static final int GL_ALPHA16F = 0x0881C;
	public static final int GL_INT_SAMPLER_2D_MULTISAMPLE = 0x09109;
	public static final int GL_SYNC_FENCE = 0x09116;
	public static final int GL_TEXTURE_2D_MULTISAMPLE = 0x09100;
	public static final int GL_MAX_GEOMETRY_INPUT_COMPONENTS = 0x09123;
	public static final int GL_UNSIGNALED = 0x09118;
	public static final int GL_COMPRESSED_RED = 0x08225;
	public static final int GL_GEOMETRY_SHADER = 0x08DD9;
	public static final int GL_RG_SNORM = 0x08F91;
	public static final int GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x08D56;
	public static final int GL_TEXTURE_SWIZZLE_RGBA = 0x08E46;
	public static final int GL_TEXTURE_RECTANGLE = 0x084F5;
	public static final int GL_RGBA_SNORM = 0x08F93;
	public static final int GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = 0x08CDB;
	public static final int GL_INT_SAMPLER_1D_ARRAY = 0x08DCE;
	public static final int GL_INT_SAMPLER_CUBE = 0x08DCC;
	public static final int GL_MAX_COLOR_ATTACHMENTS = 0x08CDF;
	public static final int GL_RG16 = 0x0822C;
	public static final int GL_UNIFORM_BLOCK_BINDING = 0x08A3F;
	public static final int GL_READ_FRAMEBUFFER = 0x08CA8;
	public static final int GL_CONTEXT_FLAGS = 0x0821E;
	public static final int GL_R8I = 0x08231;
	public static final int GL_RG8UI = 0x08238;
	public static final int GL_RGBA16I = 0x08D88;
	public static final int GL_MAP_READ_BIT = 0x00001;
	public static final int GL_RGB8_SNORM = 0x08F96;
	public static final int GL_FRAMEBUFFER_COMPLETE = 0x08CD5;
	public static final int GL_RENDERBUFFER_SAMPLES = 0x08CAB;
	public static final int GL_RENDERBUFFER = 0x08D41;
	public static final int GL_RGBA16F = 0x0881A;
	public static final int GL_UNSIGNED_INT_SAMPLER_CUBE = 0x08DD4;
	public static final int GL_TEXTURE_ALPHA_TYPE = 0x08C13;
	public static final int GL_INT_SAMPLER_1D = 0x08DC9;
	public static final int GL_R16I = 0x08233;
	public static final int GL_MAP_INVALIDATE_BUFFER_BIT = 0x00008;
	public static final int GL_UNIFORM_MATRIX_STRIDE = 0x08A3D;
	public static final int GL_R16F = 0x0822D;
	public static final int GL_FIXED_ONLY = 0x0891D;
	public static final int GL_TIMESTAMP = 0x08E28;
	public static final int GL_COPY_READ_BUFFER = 0x08F36;
	public static final int GL_CONDITION_SATISFIED = 0x0911C;
	public static final int GL_COLOR_ATTACHMENT0 = 0x08CE0;
	public static final int GL_RG_INTEGER = 0x08228;
	public static final int GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = 0x08DA8;
	public static final int GL_ALPHA16I = 0x08D8A;
	public static final int GL_FRAMEBUFFER_BINDING = 0x08CA6;
	public static final int GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x08A33;
	public static final int GL_COLOR_ATTACHMENT4 = 0x08CE4;
	public static final int GL_COLOR_ATTACHMENT3 = 0x08CE3;
	public static final int GL_DEPTH_ATTACHMENT = 0x08D00;
	public static final int GL_COLOR_ATTACHMENT2 = 0x08CE2;
	public static final int GL_RGB9_E5 = 0x08C3D;
	public static final int GL_ONE_MINUS_SRC1_COLOR = 0x088FA;
	public static final int GL_COLOR_ATTACHMENT1 = 0x08CE1;
	public static final int GL_RGBA16_SNORM = 0x08F9B;
	public static final int GL_PRIMITIVE_RESTART = 0x08F9D;
	public static final int GL_MAX_UNIFORM_BLOCK_SIZE = 0x08A30;
	public static final int GL_COLOR_ATTACHMENT8 = 0x08CE8;
	public static final int GL_COLOR_ATTACHMENT7 = 0x08CE7;
	public static final int GL_LAST_VERTEX_CONVENTION = 0x08E4E;
	public static final int GL_COLOR_ATTACHMENT6 = 0x08CE6;
	public static final int GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x08C85;
	public static final int GL_COLOR_ATTACHMENT5 = 0x08CE5;
	public static final int GL_UNIFORM_TYPE = 0x08A37;
	public static final int GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT = 0x00001;
	public static final int GL_UNSIGNED_INT_SAMPLER_3D = 0x08DD3;
	public static final int GL_COMPARE_REF_TO_TEXTURE = 0x0884E;
	public static final int GL_LINE_STRIP_ADJACENCY = 0x0000B;
	public static final int GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE = 0x0910A;
	public static final int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x08CD7;
	public static final int GL_DRAW_FRAMEBUFFER = 0x08CA9;
	public static final int GL_SRC1_COLOR = 0x088F9;
	public static final int GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = 0x08A35;
	public static final int GL_ALPHA16UI = 0x08D78;
	public static final int GL_BGRA_INTEGER = 0x08D9B;
	public static final int GL_RG16_SNORM = 0x08F99;
	public static final int GL_CONTEXT_PROFILE_MASK = 0x09126;
	public static final int GL_UNIFORM_OFFSET = 0x08A3B;
	public static final int GL_SAMPLER_BINDING = 0x08919;
	public static final int GL_RENDERBUFFER_DEPTH_SIZE = 0x08D54;
	public static final int GL_PROVOKING_VERTEX = 0x08E4F;
	public static final int GL_UNIFORM_IS_ROW_MAJOR = 0x08A3E;
	public static final int GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x08210;
	public static final int GL_MAX_PROGRAM_TEXEL_OFFSET = 0x08905;
	public static final int GL_COPY_WRITE_BUFFER = 0x08F37;
	public static final int GL_TRIANGLES_ADJACENCY = 0x0000C;
	public static final int GL_UNIFORM_NAME_LENGTH = 0x08A39;
	public static final int GL_DEPTH32F_STENCIL8 = 0x08CAD;
	public static final int GL_TEXTURE_1D_ARRAY = 0x08C18;
	public static final int GL_GEOMETRY_INPUT_TYPE = 0x08DDB;
	public static final int GL_COMPRESSED_RG_RGTC2 = 0x08DBD;
	public static final int GL_RGBA8_SNORM = 0x08F97;
	public static final int GL_VERTEX_ATTRIB_ARRAY_INTEGER = 0x088FD;
	public static final int GL_PROXY_TEXTURE_1D_ARRAY = 0x08C19;
	public static final int GL_MAX_DUAL_SOURCE_DRAW_BUFFERS = 0x088FC;
	public static final int GL_SAMPLE_POSITION = 0x08E50;
	public static final int GL_OBJECT_TYPE = 0x09112;
	public static final int GL_ANY_SAMPLES_PASSED = 0x08C2F;
	public static final int GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x08214;
	public static final int GL_TEXTURE_BINDING_RECTANGLE = 0x084F6;
	public static final int GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x08C8A;
	public static final int GL_RG8 = 0x0822B;
	public static final int GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x0910D;
	public static final int GL_SYNC_FLAGS = 0x09115;
	public static final int GL_SAMPLER_2D_ARRAY_SHADOW = 0x08DC4;
	public static final int GL_MAX_TEXTURE_BUFFER_SIZE = 0x08C2B;
	public static final int GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = 0x08DE1;
	public static final int GL_QUERY_BY_REGION_NO_WAIT = 0x08E16;
	public static final int GL_RG = 0x08227;
	public static final int GL_FRAMEBUFFER_ATTACHMENT_LAYERED = 0x08DA7;
	public static final int GL_INT_2_10_10_10_REV = 0x08D9F;
	public static final int GL_TEXTURE_BLUE_TYPE = 0x08C12;
	public static final int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x08C80;
	public static final int GL_FRAMEBUFFER = 0x08D40;
	public static final int GL_MAX_COMBINED_UNIFORM_BLOCKS = 0x08A2E;
	public static final int GL_MAX_COLOR_TEXTURE_SAMPLES = 0x0910E;
	public static final int GL_RED_SNORM = 0x08F90;
	public static final int GL_UNSIGNED_INT_VEC2 = 0x08DC6;
	public static final int GL_UNSIGNED_INT_VEC3 = 0x08DC7;
	public static final int GL_TEXTURE_BUFFER_FORMAT = 0x08C2E;
	public static final int GL_R8 = 0x08229;
	public static final int GL_UNSIGNED_INT_SAMPLER_1D = 0x08DD1;
	public static final int GL_STENCIL_BUFFER = 0x08224;
	public static final int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x08CD0;
	public static final int GL_CLAMP_FRAGMENT_COLOR = 0x0891B;
	public static final int GL_RG16UI = 0x0823A;
	public static final int GL_TRANSFORM_FEEDBACK_BUFFER_MODE = 0x08C7F;
	public static final int GL_R11F_G11F_B10F = 0x08C3A;
	public static final int GL_UNIFORM_BLOCK_NAME_LENGTH = 0x08A41;
	public static final int GL_UNIFORM_BUFFER_START = 0x08A29;
	public static final int GL_TEXTURE_SHARED_SIZE = 0x08C3F;
	public static final int GL_INDEX = 0x08222;
	public static final int GL_QUERY_NO_WAIT = 0x08E14;
	public static final int GL_RENDERBUFFER_ALPHA_SIZE = 0x08D53;
	public static final int GL_TEXTURE_STENCIL_SIZE = 0x088F1;
	public static final int GL_MAX_FRAGMENT_UNIFORM_BLOCKS = 0x08A2D;
	public static final int GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = 0x08C76;
	public static final int GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER = 0x08A45;
	public static final int GL_RGB8I = 0x08D8F;
	public static final int GL_TEXTURE_BINDING_1D_ARRAY = 0x08C1C;
	public static final int GL_R16_SNORM = 0x08F98;
	public static final int GL_MAX_VERTEX_OUTPUT_COMPONENTS = 0x09122;
	public static final int GL_GEOMETRY_VERTICES_OUT = 0x08DDA;
	public static final int GL_R32UI = 0x08236;
	public static final int GL_ONE_MINUS_SRC1_ALPHA = 0x088FB;
	public static final int GL_SYNC_GPU_COMMANDS_COMPLETE = 0x09117;
	public static final int GL_UNSIGNED_INT_SAMPLER_2D = 0x08DD2;
	public static final int GL_ACTIVE_UNIFORM_BLOCKS = 0x08A36;
	public static final int GL_UNIFORM_BUFFER_SIZE = 0x08A2A;
	public static final int GL_ALPHA32F = 0x08816;
	public static final int GL_LINES_ADJACENCY = 0x0000A;
	public static final int GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x08213;
	public static final int GL_UNSIGNED_INT_VEC4 = 0x08DC8;
	public static final int GL_ALPHA32I = 0x08D84;
	public static final int GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x0910C;
	public static final int GL_BLUE_INTEGER = 0x08D96;
	public static final int GL_ALPHA32UI = 0x08D72;
	public static final int GL_COMPRESSED_SIGNED_RED_RGTC1 = 0x08DBC;
	public static final int GL_CLAMP_VERTEX_COLOR = 0x0891A;
	public static final int GL_MAJOR_VERSION = 0x0821B;
	public static final int GL_GEOMETRY_OUTPUT_TYPE = 0x08DDC;
	public static final int GL_MINOR_VERSION = 0x0821C;
	public static final int GL_INVALID_FRAMEBUFFER_OPERATION = 0x00506;
	public static final int GL_TEXTURE_CUBE_MAP_SEAMLESS = 0x0884F;
	public static final int GL_RGB16F = 0x0881B;
	public static final int GL_TIME_ELAPSED = 0x088BF;
	public static final int GL_PROXY_TEXTURE_RECTANGLE = 0x084F7;
	public static final int GL_R16UI = 0x08234;
	public static final int GL_RENDERBUFFER_BLUE_SIZE = 0x08D52;
	public static final int GL_TRIANGLE_STRIP_ADJACENCY = 0x0000D;
	public static final int GL_RGB16I = 0x08D89;
	public static final int GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER = 0x08CDC;
	public static final int GL_NUM_EXTENSIONS = 0x0821D;
	public static final int GL_SAMPLER_CUBE_SHADOW = 0x08DC5;
	public static final int GL_RENDERBUFFER_WIDTH = 0x08D42;
	public static final int GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x08216;
	public static final int GL_RENDERBUFFER_HEIGHT = 0x08D43;
	public static final int GL_MAX_DEPTH_TEXTURE_SAMPLES = 0x0910F;
	public static final int GL_COPY_WRITE_BUFFER_BINDING = 0x08F37;
	public static final int GL_MAX_VARYING_COMPONENTS = 0x08B4B;
	public static final int GL_PROXY_TEXTURE_2D_ARRAY = 0x08C1B;
	public static final int GL_RGBA_INTEGER_MODE = 0x08D9E;
	public static final int GL_SYNC_FLUSH_COMMANDS_BIT = 0x00001;
	public static final int GL_MIN_PROGRAM_TEXEL_OFFSET = 0x08904;
	public static final int GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x08C88;
	public static final int GL_BGR_INTEGER = 0x08D9A;
	public static final int GL_ALPHA_INTEGER = 0x08D97;
	public static final int GL_RENDERBUFFER_BINDING = 0x08CA7;
	public static final int GL_COMPRESSED_RG = 0x08226;
	public static final int GL_MAX_INTEGER_SAMPLES = 0x09110;
	public static final int GL_COMPARE_REF_DEPTH_TO_TEXTURE = 0x0884E;
	public static final int GL_R8_SNORM = 0x08F94;
	public static final int GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x08A31;
	public static final int GL_SYNC_STATUS = 0x09114;
	public static final int GL_RENDERBUFFER_INTERNAL_FORMAT = 0x08D44;
	public static final int GL_ALREADY_SIGNALED = 0x0911A;
	public static final int GL_READ_FRAMEBUFFER_BINDING = 0x08CAA;
	public static final int GL_SAMPLER_2D_RECT = 0x08B63;
	public static final int GL_RGB16_SNORM = 0x08F9A;
	public static final int GL_RENDERBUFFER_GREEN_SIZE = 0x08D51;
	public static final int GL_RGBA16UI = 0x08D76;
	public static final int GL_UNSIGNED_INT_SAMPLER_1D_ARRAY = 0x08DD6;
	public static final int GL_STENCIL_INDEX16 = 0x08D49;
	public static final int GL_TEXTURE_BINDING_2D_ARRAY = 0x08C1D;
	public static final int GL_INT_SAMPLER_2D_RECT = 0x08DCD;
	public static final int GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x08A44;
	public static final int GL_TIMEOUT_EXPIRED = 0x0911B;
	public static final int GL_TEXTURE_2D_ARRAY = 0x08C1A;
	public static final int GL_FLOAT_32_UNSIGNED_INT_24_8_REV = 0x08DAD;
	public static final int GL_RGBA32UI = 0x08D70;
	public static final int GL_SYNC_CONDITION = 0x09113;
	public static final int GL_MAX_UNIFORM_BUFFER_BINDINGS = 0x08A2F;
	public static final int GL_SAMPLE_MASK = 0x08E51;
	public static final int GL_RGB_SNORM = 0x08F92;
	public static final int GL_RGBA_INTEGER = 0x08D99;
	public static final int GL_MAX_SERVER_WAIT_TIMEOUT = 0x09111;
	public static final int GL_FRAMEBUFFER_DEFAULT = 0x08218;
	public static final int GL_RG8I = 0x08237;
	public static final int GL_MAX_RECTANGLE_TEXTURE_SIZE = 0x084F8;
	public static final int GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x08212;
	public static final int GL_QUERY_BY_REGION_WAIT = 0x08E15;
	public static final int GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x08A43;
	public static final int GL_INTERLEAVED_ATTRIBS = 0x08C8C;
	public static final int GL_TEXTURE_RED_TYPE = 0x08C10;
	public static final int GL_UNSIGNED_INT_24_8 = 0x084FA;
	public static final int GL_DEPTH_STENCIL_ATTACHMENT = 0x0821A;
	public static final int GL_R32F = 0x0822E;
	public static final int GL_RG16I = 0x08239;
	public static final int GL_RG16F = 0x0822F;
	public static final int GL_RGB32I = 0x08D83;
	public static final int GL_RGB32F = 0x08815;
	public static final int GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS = 0x08A32;
	public static final int GL_R32I = 0x08235;
	public static final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x08CD4;
	public static final int GL_RASTERIZER_DISCARD = 0x08C89;
	public static final int GL_MAX_GEOMETRY_OUTPUT_COMPONENTS = 0x09124;
	public static final int GL_STENCIL_INDEX1 = 0x08D46;
	public static final int GL_STENCIL_INDEX4 = 0x08D47;
	public static final int GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x08217;
	public static final int GL_RGBA8UI = 0x08D7C;
	public static final int GL_PROXY_TEXTURE_2D_MULTISAMPLE = 0x09101;
	public static final int GL_MAX_FRAGMENT_INPUT_COMPONENTS = 0x09125;
	public static final int GL_ALPHA8UI = 0x08D7E;
	public static final int GL_SAMPLER_BUFFER = 0x08DC2;
	public static final int GL_UNSIGNED_NORMALIZED = 0x08C17;
	public static final int GL_TEXTURE_BUFFER = 0x08C2A;
	public static final int GL_UNIFORM_BLOCK_DATA_SIZE = 0x08A40;
	public static final int GL_UNIFORM_BLOCK_INDEX = 0x08A3A;
	public static final int GL_TRANSFORM_FEEDBACK_VARYINGS = 0x08C83;
	public static final int GL_INT_SAMPLER_2D = 0x08DCA;
	public static final int GL_RGBA8I = 0x08D8E;
	public static final int GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x08C8F;
	public static final int GL_RGB10_A2UI = 0x0906F;
	public static final int GL_TRANSFORM_FEEDBACK_BUFFER = 0x08C8E;
	public static final int GL_BUFFER_ACCESS_FLAGS = 0x0911F;
	public static final int GL_MAX_ARRAY_TEXTURE_LAYERS = 0x088FF;
	public static final int GL_CONTEXT_COMPATIBILITY_PROFILE_BIT = 0x00002;
	public static final int GL_TEXTURE_SWIZZLE_A = 0x08E45;
	public static final int GL_TEXTURE_SWIZZLE_B = 0x08E44;
	public static final int GL_DEPTH_CLAMP = 0x0864F;
	public static final int GL_RENDERBUFFER_STENCIL_SIZE = 0x08D55;
	public static final int GL_R16 = 0x0822A;
	public static final int GL_SAMPLE_MASK_VALUE = 0x08E52;
	public static final int GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x09103;
	public static final int GL_DRAW_FRAMEBUFFER_BINDING = 0x08CA6;
	public static final int GL_TEXTURE_SWIZZLE_G = 0x08E43;
	public static final int GL_CLAMP_READ_COLOR = 0x0891C;
	public static final int GL_MAP_INVALIDATE_RANGE_BIT = 0x00004;
	public static final int GL_RG32UI = 0x0823C;
	public static final int GL_MAP_UNSYNCHRONIZED_BIT = 0x00020;
	public static final int GL_RGB32UI = 0x08D71;
	public static final int GL_SAMPLER_2D_ARRAY = 0x08DC1;
	public static final int GL_TEXTURE_SWIZZLE_R = 0x08E42;
	public static final int GL_INT_SAMPLER_3D = 0x08DCB;
	public static final int GL_GREEN_INTEGER = 0x08D95;
	public static final int GL_TEXTURE_GREEN_TYPE = 0x08C11;
	public static final int GL_COLOR_ATTACHMENT15 = 0x08CEF;
	public static final int GL_FRAMEBUFFER_SRGB = 0x08DB9;
	public static final int GL_COLOR_ATTACHMENT14 = 0x08CEE;
	public static final int GL_BUFFER_MAP_LENGTH = 0x09120;
	public static final int GL_COLOR_ATTACHMENT13 = 0x08CED;
	public static final int GL_STENCIL_INDEX8 = 0x08D48;
	public static final int GL_COLOR_ATTACHMENT12 = 0x08CEC;
	public static final int GL_COLOR_ATTACHMENT11 = 0x08CEB;
	public static final int GL_COLOR_ATTACHMENT10 = 0x08CEA;
	public static final int GL_COMPRESSED_RED_RGTC1 = 0x08DBB;
	public static final int GL_FRAMEBUFFER_UNSUPPORTED = 0x08CDD;
	public static final int GL_RENDERBUFFER_RED_SIZE = 0x08D50;
	public static final int GL_UNIFORM_BUFFER_BINDING = 0x08A28;
	public static final int GL_R8UI = 0x08232;
	public static final int GL_MAX_VERTEX_UNIFORM_BLOCKS = 0x08A2B;
	public static final int GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x08215;
	public static final int GL_FRAMEBUFFER_UNDEFINED = 0x08219;
	public static final int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x08C8B;
	public static final int GL_UNIFORM_BUFFER = 0x08A11;
	public static final int GL_CONTEXT_CORE_PROFILE_BIT = 0x00001;
	public static final int GL_COPY_READ_BUFFER_BINDING = 0x08F36;
	public static final int GL_VERTEX_ARRAY_BINDING = 0x085B5;
	public static final int GL_PRIMITIVE_RESTART_INDEX = 0x08F9E;
	public static final int GL_RGB16UI = 0x08D77;
	public static final int GL_TEXTURE_BINDING_BUFFER = 0x08C2C;
	public static final int GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x08211;
	public static final int GL_MAX_RENDERBUFFER_SIZE = 0x084E8;
	public static final int GL_RGBA32I = 0x08D82;
	public static final int GL_INVALID_INDEX = 0xFFFFFF;
	public static final int GL_WAIT_FAILED = 0x0911D;
	public static final int GL_MAX_SAMPLE_MASK_WORDS = 0x08E59;
	public static final int GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x08A34;
	public static final int GL_RGBA32F = 0x08814;
	public static final int GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION = 0x08E4C;
	public static final int GL_TEXTURE_SAMPLES = 0x09106;
	public static final int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x08CD1;
	public static final int GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x08A42;
	public static final int GL_UNSIGNED_INT_5_9_9_9_REV = 0x08C3E;
	public static final int GL_RED_INTEGER = 0x08D94;
	public static final int GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x08A46;
	public static final int GL_VERTEX_ATTRIB_ARRAY_DIVISOR = 0x088FE;
	public static final int GL_PROGRAM_POINT_SIZE = 0x08642;
	public static final int GL_TEXTURE_INTENSITY_TYPE = 0x08C15;
	public static final int GL_TEXTURE_DEPTH_TYPE = 0x08C16;
	public static final int GL_RGB8UI = 0x08D7D;
	public static final int GL_COMPRESSED_SIGNED_RG_RGTC2 = 0x08DBE;
	public static final int GL_DEPTH24_STENCIL8 = 0x088F0;
	public static final int GL_TEXTURE_FIXED_SAMPLE_LOCATIONS = 0x09107;
	public static final int GL_UNSIGNED_INT_SAMPLER_2D_RECT = 0x08DD5;
	public static final int GL_HALF_FLOAT = 0x0140B;
	public static final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x08CD3;
	public static final int GL_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x09102;
	public static final int GL_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x0910B;
	public void glBeginConditionalRender(int id, int mode);
	public void glBeginTransformFeedback(int primitiveMode);
	public void glBindBufferBase(int target, int index, int buffer);
	public void glBindBufferRange(int target, int index, int buffer, long offset, long size);
	public void glBindFragDataLocation(int program, int colorNumber, java.nio.ByteBuffer name);
	public void glBindFragDataLocation(int program, int colorNumber, java.lang.CharSequence name);
	public void glBindFramebuffer(int target, int framebuffer);
	public void glBindRenderbuffer(int target, int renderbuffer);
	public void glBindVertexArray(int array);
	public void glBlitFramebuffer(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, int mask, int filter);
	public int glCheckFramebufferStatus(int target);
	public void glClampColor(int target, int clamp);
	public void glClearBuffer(int buffer, int drawbuffer, java.nio.FloatBuffer value);
	public void glClearBuffer(int buffer, int drawbuffer, java.nio.IntBuffer value);
	public void glClearBufferfi(int buffer, int drawbuffer, float depth, int stencil);
	public void glClearBufferu(int buffer, int drawbuffer, java.nio.IntBuffer value);
	public void glColorMaski(int buf, boolean r, boolean g, boolean b, boolean a);
	public void glDeleteFramebuffers(int framebuffer);
	public void glDeleteFramebuffers(java.nio.IntBuffer framebuffers);
	public void glDeleteRenderbuffers(int renderbuffer);
	public void glDeleteRenderbuffers(java.nio.IntBuffer renderbuffers);
	public void glDeleteVertexArrays(int array);
	public void glDeleteVertexArrays(java.nio.IntBuffer arrays);
	public void glDisablei(int target, int index);
	public void glEnablei(int target, int index);
	public void glEndConditionalRender();
	public void glEndTransformFeedback();
	public void glFlushMappedBufferRange(int target, long offset, long length);
	public void glFramebufferRenderbuffer(int target, int attachment, int renderbuffertarget, int renderbuffer);
	public void glFramebufferTexture1D(int target, int attachment, int textarget, int texture, int level);
	public void glFramebufferTexture2D(int target, int attachment, int textarget, int texture, int level);
	public void glFramebufferTexture3D(int target, int attachment, int textarget, int texture, int level, int zoffset);
	public void glFramebufferTextureLayer(int target, int attachment, int texture, int level, int layer);
	public void glGenerateMipmap(int target);
	public int glGenFramebuffers();
	public void glGenFramebuffers(java.nio.IntBuffer framebuffers);
	public int glGenRenderbuffers();
	public void glGenRenderbuffers(java.nio.IntBuffer renderbuffers);
	public int glGenVertexArrays();
	public void glGenVertexArrays(java.nio.IntBuffer arrays);
	public boolean glGetBoolean(int value, int index);
	public void glGetBoolean(int value, int index, java.nio.ByteBuffer data);
	public int glGetFragDataLocation(int program, java.nio.ByteBuffer name);
	public int glGetFragDataLocation(int program, java.lang.CharSequence name);
	public int glGetFramebufferAttachmentParameter(int target, int attachment, int pname);
	public void glGetFramebufferAttachmentParameter(int target, int attachment, int pname, java.nio.IntBuffer params);
	public int glGetFramebufferAttachmentParameteri(int target, int attachment, int pname);
	public int glGetInteger(int value, int index);
	public void glGetInteger(int value, int index, java.nio.IntBuffer data);
	public int glGetRenderbufferParameter(int target, int pname);
	public void glGetRenderbufferParameter(int target, int pname, java.nio.IntBuffer params);
	public int glGetRenderbufferParameteri(int target, int pname);
	public java.lang.String glGetStringi(int name, int index);
	public void glGetTexParameterI(int target, int pname, java.nio.IntBuffer params);
	public int glGetTexParameterIi(int target, int pname);
	public void glGetTexParameterIu(int target, int pname, java.nio.IntBuffer params);
	public int glGetTexParameterIui(int target, int pname);
	public void glGetTransformFeedbackVarying(int program, int index, java.nio.IntBuffer length, java.nio.IntBuffer size, java.nio.IntBuffer type, java.nio.ByteBuffer name);
	public java.lang.String glGetTransformFeedbackVarying(int program, int index, int bufSize, java.nio.IntBuffer size, java.nio.IntBuffer type);
	public void glGetUniformu(int program, int location, java.nio.IntBuffer params);
	public void glGetVertexAttribI(int index, int pname, java.nio.IntBuffer params);
	public void glGetVertexAttribIu(int index, int pname, java.nio.IntBuffer params);
	public boolean glIsEnabledi(int target, int index);
	public boolean glIsFramebuffer(int framebuffer);
	public boolean glIsRenderbuffer(int renderbuffer);
	public boolean glIsVertexArray(int array);
	public java.nio.ByteBuffer glMapBufferRange(int target, long offset, long length, int access, java.nio.ByteBuffer old_buffer);
	public void glRenderbufferStorage(int target, int internalformat, int width, int height);
	public void glRenderbufferStorageMultisample(int target, int samples, int internalformat, int width, int height);
	public void glTexParameterI(int target, int pname, java.nio.IntBuffer params);
	public void glTexParameterIi(int target, int pname, int param);
	public void glTexParameterIu(int target, int pname, java.nio.IntBuffer params);
	public void glTexParameterIui(int target, int pname, int param);
	public void glTransformFeedbackVaryings(int program, java.lang.CharSequence[] varyings, int bufferMode);
	public void glTransformFeedbackVaryings(int program, int count, java.nio.ByteBuffer varyings, int bufferMode);
	public void glUniform1u(int location, java.nio.IntBuffer value);
	public void glUniform1ui(int location, int v0);
	public void glUniform2u(int location, java.nio.IntBuffer value);
	public void glUniform2ui(int location, int v0, int v1);
	public void glUniform3u(int location, java.nio.IntBuffer value);
	public void glUniform3ui(int location, int v0, int v1, int v2);
	public void glUniform4u(int location, java.nio.IntBuffer value);
	public void glUniform4ui(int location, int v0, int v1, int v2, int v3);
	public void glVertexAttribI1(int index, java.nio.IntBuffer v);
	public void glVertexAttribI1i(int index, int x);
	public void glVertexAttribI1u(int index, java.nio.IntBuffer v);
	public void glVertexAttribI1ui(int index, int x);
	public void glVertexAttribI2(int index, java.nio.IntBuffer v);
	public void glVertexAttribI2i(int index, int x, int y);
	public void glVertexAttribI2u(int index, java.nio.IntBuffer v);
	public void glVertexAttribI2ui(int index, int x, int y);
	public void glVertexAttribI3(int index, java.nio.IntBuffer v);
	public void glVertexAttribI3i(int index, int x, int y, int z);
	public void glVertexAttribI3u(int index, java.nio.IntBuffer v);
	public void glVertexAttribI3ui(int index, int x, int y, int z);
	public void glVertexAttribI4(int index, java.nio.ByteBuffer v);
	public void glVertexAttribI4(int index, java.nio.IntBuffer v);
	public void glVertexAttribI4(int index, java.nio.ShortBuffer v);
	public void glVertexAttribI4i(int index, int x, int y, int z, int w);
	public void glVertexAttribI4u(int index, java.nio.ByteBuffer v);
	public void glVertexAttribI4u(int index, java.nio.IntBuffer v);
	public void glVertexAttribI4u(int index, java.nio.ShortBuffer v);
	public void glVertexAttribI4ui(int index, int x, int y, int z, int w);
	public void glVertexAttribIPointer(int index, int size, int type, int stride, java.nio.ByteBuffer buffer);
	public void glVertexAttribIPointer(int index, int size, int type, int stride, java.nio.IntBuffer buffer);
	public void glVertexAttribIPointer(int index, int size, int type, int stride, long buffer_buffer_offset);
	public void glVertexAttribIPointer(int index, int size, int type, int stride, java.nio.ShortBuffer buffer);
	public void glCopyBufferSubData(int readtarget, int writetarget, long readoffset, long writeoffset, long size);
	public void glDrawArraysInstanced(int mode, int first, int count, int primcount);
	public void glDrawElementsInstanced(int mode, java.nio.ByteBuffer indices, int primcount);
	public void glDrawElementsInstanced(int mode, java.nio.IntBuffer indices, int primcount);
	public void glDrawElementsInstanced(int mode, int indices_count, int type, long indices_buffer_offset, int primcount);
	public void glDrawElementsInstanced(int mode, java.nio.ShortBuffer indices, int primcount);
	public int glGetActiveUniformBlock(int program, int uniformBlockIndex, int pname);
	public void glGetActiveUniformBlock(int program, int uniformBlockIndex, int pname, java.nio.IntBuffer params);
	public int glGetActiveUniformBlocki(int program, int uniformBlockIndex, int pname);
	public java.lang.String glGetActiveUniformBlockName(int program, int uniformBlockIndex, int bufSize);
	public void glGetActiveUniformBlockName(int program, int uniformBlockIndex, java.nio.IntBuffer length, java.nio.ByteBuffer uniformBlockName);
	public java.lang.String glGetActiveUniformName(int program, int uniformIndex, int bufSize);
	public void glGetActiveUniformName(int program, int uniformIndex, java.nio.IntBuffer length, java.nio.ByteBuffer uniformName);
	public void glGetActiveUniforms(int program, java.nio.IntBuffer uniformIndices, int pname, java.nio.IntBuffer params);
	public int glGetActiveUniforms(int program, int uniformIndex, int pname);
	public int glGetActiveUniformsi(int program, int uniformIndex, int pname);
	public int glGetUniformBlockIndex(int program, java.nio.ByteBuffer uniformBlockName);
	public int glGetUniformBlockIndex(int program, java.lang.CharSequence uniformBlockName);
	public void glGetUniformIndices(int program, java.nio.ByteBuffer uniformNames, java.nio.IntBuffer uniformIndices);
	public void glGetUniformIndices(int program, java.lang.CharSequence[] uniformNames, java.nio.IntBuffer uniformIndices);
	public void glPrimitiveRestartIndex(int index);
	public void glTexBuffer(int target, int internalformat, int buffer);
	public void glUniformBlockBinding(int program, int uniformBlockIndex, int uniformBlockBinding);
	public int glClientWaitSync(GLSync sync, int flags, long timeout);
	public void glDeleteSync(GLSync sync);
	public void glDrawElementsBaseVertex(int mode, java.nio.ByteBuffer indices, int basevertex);
	public void glDrawElementsBaseVertex(int mode, java.nio.IntBuffer indices, int basevertex);
	public void glDrawElementsBaseVertex(int mode, int indices_count, int type, long indices_buffer_offset, int basevertex);
	public void glDrawElementsBaseVertex(int mode, java.nio.ShortBuffer indices, int basevertex);
	public void glDrawElementsInstancedBaseVertex(int mode, java.nio.ByteBuffer indices, int primcount, int basevertex);
	public void glDrawElementsInstancedBaseVertex(int mode, java.nio.IntBuffer indices, int primcount, int basevertex);
	public void glDrawElementsInstancedBaseVertex(int mode, int indices_count, int type, long indices_buffer_offset, int primcount, int basevertex);
	public void glDrawElementsInstancedBaseVertex(int mode, java.nio.ShortBuffer indices, int primcount, int basevertex);
	public void glDrawRangeElementsBaseVertex(int mode, int start, int end, java.nio.ByteBuffer indices, int basevertex);
	public void glDrawRangeElementsBaseVertex(int mode, int start, int end, java.nio.IntBuffer indices, int basevertex);
	public void glDrawRangeElementsBaseVertex(int mode, int start, int end, int indices_count, int type, long indices_buffer_offset, int basevertex);
	public void glDrawRangeElementsBaseVertex(int mode, int start, int end, java.nio.ShortBuffer indices, int basevertex);
	public GLSync glFenceSync(int condition, int flags);
	public void glFramebufferTexture(int target, int attachment, int texture, int level);
	public long glGetBufferParameter(int target, int pname);
	public void glGetBufferParameter(int target, int pname, java.nio.LongBuffer params);
	public long glGetBufferParameteri64(int target, int pname);
	public long glGetInteger64(int pname);
	public long glGetInteger64(int value, int index);
	public void glGetInteger64(int value, int index, java.nio.LongBuffer data);
	public void glGetInteger64(int pname, java.nio.LongBuffer data);
	public void glGetMultisample(int pname, int index, java.nio.FloatBuffer val);
	public int glGetSync(GLSync sync, int pname);
	public void glGetSync(GLSync sync, int pname, java.nio.IntBuffer length, java.nio.IntBuffer values);
	public int glGetSynci(GLSync sync, int pname);
	public boolean glIsSync(GLSync sync);
	public void glProvokingVertex(int mode);
	public void glSampleMaski(int index, int mask);
	public void glTexImage2DMultisample(int target, int samples, int internalformat, int width, int height, boolean fixedsamplelocations);
	public void glTexImage3DMultisample(int target, int samples, int internalformat, int width, int height, int depth, boolean fixedsamplelocations);
	public void glWaitSync(GLSync sync, int flags, long timeout);
	public void glBindFragDataLocationIndexed(int program, int colorNumber, int index, java.nio.ByteBuffer name);
	public void glBindFragDataLocationIndexed(int program, int colorNumber, int index, java.lang.CharSequence name);
	public void glBindSampler(int unit, int sampler);
	public void glColorP3u(int type, java.nio.IntBuffer color);
	public void glColorP3ui(int type, int color);
	public void glColorP4u(int type, java.nio.IntBuffer color);
	public void glColorP4ui(int type, int color);
	public void glDeleteSamplers(int sampler);
	public void glDeleteSamplers(java.nio.IntBuffer samplers);
	public int glGenSamplers();
	public void glGenSamplers(java.nio.IntBuffer samplers);
	public int glGetFragDataIndex(int program, java.nio.ByteBuffer name);
	public int glGetFragDataIndex(int program, java.lang.CharSequence name);
	public long glGetQueryObject(int id, int pname);
	public void glGetQueryObject(int id, int pname, java.nio.LongBuffer params);
	public long glGetQueryObjecti64(int id, int pname);
	public long glGetQueryObjectu(int id, int pname);
	public void glGetQueryObjectu(int id, int pname, java.nio.LongBuffer params);
	public long glGetQueryObjectui64(int id, int pname);
	public void glGetSamplerParameter(int sampler, int pname, java.nio.FloatBuffer params);
	public void glGetSamplerParameter(int sampler, int pname, java.nio.IntBuffer params);
	public float glGetSamplerParameterf(int sampler, int pname);
	public int glGetSamplerParameteri(int sampler, int pname);
	public void glGetSamplerParameterI(int sampler, int pname, java.nio.IntBuffer params);
	public int glGetSamplerParameterIi(int sampler, int pname);
	public void glGetSamplerParameterIu(int sampler, int pname, java.nio.IntBuffer params);
	public int glGetSamplerParameterIui(int sampler, int pname);
	public boolean glIsSampler(int sampler);
	public void glMultiTexCoordP1u(int texture, int type, java.nio.IntBuffer coords);
	public void glMultiTexCoordP1ui(int texture, int type, int coords);
	public void glMultiTexCoordP2u(int texture, int type, java.nio.IntBuffer coords);
	public void glMultiTexCoordP2ui(int texture, int type, int coords);
	public void glMultiTexCoordP3u(int texture, int type, java.nio.IntBuffer coords);
	public void glMultiTexCoordP3ui(int texture, int type, int coords);
	public void glMultiTexCoordP4u(int texture, int type, java.nio.IntBuffer coords);
	public void glMultiTexCoordP4ui(int texture, int type, int coords);
	public void glNormalP3u(int type, java.nio.IntBuffer coords);
	public void glNormalP3ui(int type, int coords);
	public void glQueryCounter(int id, int target);
	public void glSamplerParameter(int sampler, int pname, java.nio.FloatBuffer params);
	public void glSamplerParameter(int sampler, int pname, java.nio.IntBuffer params);
	public void glSamplerParameterf(int sampler, int pname, float param);
	public void glSamplerParameteri(int sampler, int pname, int param);
	public void glSamplerParameterI(int sampler, int pname, java.nio.IntBuffer params);
	public void glSamplerParameterIu(int sampler, int pname, java.nio.IntBuffer params);
	public void glSecondaryColorP3u(int type, java.nio.IntBuffer color);
	public void glSecondaryColorP3ui(int type, int color);
	public void glTexCoordP1u(int type, java.nio.IntBuffer coords);
	public void glTexCoordP1ui(int type, int coords);
	public void glTexCoordP2u(int type, java.nio.IntBuffer coords);
	public void glTexCoordP2ui(int type, int coords);
	public void glTexCoordP3u(int type, java.nio.IntBuffer coords);
	public void glTexCoordP3ui(int type, int coords);
	public void glTexCoordP4u(int type, java.nio.IntBuffer coords);
	public void glTexCoordP4ui(int type, int coords);
	public void glVertexAttribDivisor(int index, int divisor);
	public void glVertexAttribP1u(int index, int type, boolean normalized, java.nio.IntBuffer value);
	public void glVertexAttribP1ui(int index, int type, boolean normalized, int value);
	public void glVertexAttribP2u(int index, int type, boolean normalized, java.nio.IntBuffer value);
	public void glVertexAttribP2ui(int index, int type, boolean normalized, int value);
	public void glVertexAttribP3u(int index, int type, boolean normalized, java.nio.IntBuffer value);
	public void glVertexAttribP3ui(int index, int type, boolean normalized, int value);
	public void glVertexAttribP4u(int index, int type, boolean normalized, java.nio.IntBuffer value);
	public void glVertexAttribP4ui(int index, int type, boolean normalized, int value);
	public void glVertexP2u(int type, java.nio.IntBuffer value);
	public void glVertexP2ui(int type, int value);
	public void glVertexP3u(int type, java.nio.IntBuffer value);
	public void glVertexP3ui(int type, int value);
	public void glVertexP4u(int type, java.nio.IntBuffer value);
	public void glVertexP4ui(int type, int value);
}
