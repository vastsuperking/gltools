package gltools.gl;


public interface GL2 {
	public static final int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x08B4D;
	public static final int GL_POINT_SPRITE_COORD_ORIGIN = 0x08CA0;
	public static final int GL_BLEND_EQUATION_ALPHA = 0x0883D;
	public static final int GL_ACTIVE_ATTRIBUTES = 0x08B89;
	public static final int GL_MAX_VERTEX_ATTRIBS = 0x08869;
	public static final int GL_BOOL = 0x08B56;
	public static final int GL_SAMPLER_1D = 0x08B5D;
	public static final int GL_VERTEX_SHADER = 0x08B31;
	public static final int GL_DRAW_BUFFER14 = 0x08833;
	public static final int GL_BLEND_EQUATION_RGB = 0x08009;
	public static final int GL_DRAW_BUFFER15 = 0x08834;
	public static final int GL_DRAW_BUFFER12 = 0x08831;
	public static final int GL_SAMPLER_1D_SHADOW = 0x08B61;
	public static final int GL_VERTEX_PROGRAM_TWO_SIDE = 0x08643;
	public static final int GL_CURRENT_PROGRAM = 0x08B8D;
	public static final int GL_DRAW_BUFFER13 = 0x08832;
	public static final int GL_DRAW_BUFFER10 = 0x0882F;
	public static final int GL_DRAW_BUFFER11 = 0x08830;
	public static final int GL_SLUMINANCE = 0x08C46;
	public static final int GL_SLUMINANCE_ALPHA = 0x08C44;
	public static final int GL_INFO_LOG_LENGTH = 0x08B84;
	public static final int GL_SRGB_ALPHA = 0x08C42;
	public static final int GL_STENCIL_BACK_WRITEMASK = 0x08CA5;
	public static final int GL_COORD_REPLACE = 0x08862;
	public static final int GL_SAMPLER_2D = 0x08B5E;
	public static final int GL_PIXEL_UNPACK_BUFFER = 0x088EC;
	public static final int GL_FRAGMENT_SHADER = 0x08B30;
	public static final int GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x08B8B;
	public static final int GL_STENCIL_BACK_REF = 0x08CA3;
	public static final int GL_VERTEX_ATTRIB_ARRAY_TYPE = 0x08625;
	public static final int GL_VERTEX_ATTRIB_ARRAY_POINTER = 0x08645;
	public static final int GL_COMPILE_STATUS = 0x08B81;
	public static final int GL_STENCIL_BACK_PASS_DEPTH_PASS = 0x08803;
	public static final int GL_MAX_VARYING_FLOATS = 0x08B4B;
	public static final int GL_PIXEL_PACK_BUFFER_BINDING = 0x088ED;
	public static final int GL_SAMPLER_3D = 0x08B5F;
	public static final int GL_SLUMINANCE8 = 0x08C47;
	public static final int GL_FLOAT_MAT3 = 0x08B5B;
	public static final int GL_CURRENT_RASTER_SECONDARY_COLOR = 0x0845F;
	public static final int GL_FLOAT_MAT4 = 0x08B5C;
	public static final int GL_STENCIL_BACK_VALUE_MASK = 0x08CA4;
	public static final int GL_PIXEL_UNPACK_BUFFER_BINDING = 0x088EF;
	public static final int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x0886A;
	public static final int GL_ACTIVE_UNIFORMS = 0x08B86;
	public static final int GL_MAX_VERTEX_UNIFORM_COMPONENTS = 0x08B4A;
	public static final int GL_FLOAT_MAT2 = 0x08B5A;
	public static final int GL_BOOL_VEC2 = 0x08B57;
	public static final int GL_BOOL_VEC4 = 0x08B59;
	public static final int GL_STENCIL_BACK_PASS_DEPTH_FAIL = 0x08802;
	public static final int GL_BOOL_VEC3 = 0x08B58;
	public static final int GL_COMPRESSED_SRGB_ALPHA = 0x08C49;
	public static final int GL_VERTEX_ATTRIB_ARRAY_SIZE = 0x08623;
	public static final int GL_COMPRESSED_SRGB = 0x08C48;
	public static final int GL_VERTEX_PROGRAM_POINT_SIZE = 0x08642;
	public static final int GL_CURRENT_VERTEX_ATTRIB = 0x08626;
	public static final int GL_VERTEX_ATTRIB_ARRAY_ENABLED = 0x08622;
	public static final int GL_FLOAT_MAT4x3 = 0x08B6A;
	public static final int GL_FLOAT_MAT4x2 = 0x08B69;
	public static final int GL_UPPER_LEFT = 0x08CA2;
	public static final int GL_FLOAT_MAT3x2 = 0x08B67;
	public static final int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x08B4C;
	public static final int GL_FLOAT_MAT3x4 = 0x08B68;
	public static final int GL_MAX_TEXTURE_IMAGE_UNITS = 0x08872;
	public static final int GL_ATTACHED_SHADERS = 0x08B85;
	public static final int GL_POINT_SPRITE = 0x08861;
	public static final int GL_FLOAT_MAT2x3 = 0x08B65;
	public static final int GL_FLOAT_MAT2x4 = 0x08B66;
	public static final int GL_SHADER_SOURCE_LENGTH = 0x08B88;
	public static final int GL_MAX_DRAW_BUFFERS = 0x08824;
	public static final int GL_SRGB8_ALPHA8 = 0x08C43;
	public static final int GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = 0x08B8A;
	public static final int GL_VALIDATE_STATUS = 0x08B83;
	public static final int GL_SLUMINANCE8_ALPHA8 = 0x08C45;
	public static final int GL_MAX_TEXTURE_COORDS = 0x08871;
	public static final int GL_SAMPLER_CUBE = 0x08B60;
	public static final int GL_ACTIVE_UNIFORM_MAX_LENGTH = 0x08B87;
	public static final int GL_SRGB8 = 0x08C41;
	public static final int GL_VERTEX_ATTRIB_ARRAY_STRIDE = 0x08624;
	public static final int GL_STENCIL_BACK_FUNC = 0x08800;
	public static final int GL_SRGB = 0x08C40;
	public static final int GL_STENCIL_BACK_FAIL = 0x08801;
	public static final int GL_INT_VEC4 = 0x08B55;
	public static final int GL_INT_VEC3 = 0x08B54;
	public static final int GL_INT_VEC2 = 0x08B53;
	public static final int GL_LOWER_LEFT = 0x08CA1;
	public static final int GL_PIXEL_PACK_BUFFER = 0x088EB;
	public static final int GL_DRAW_BUFFER0 = 0x08825;
	public static final int GL_COMPRESSED_SLUMINANCE_ALPHA = 0x08C4B;
	public static final int GL_FLOAT_VEC3 = 0x08B51;
	public static final int GL_FLOAT_VEC4 = 0x08B52;
	public static final int GL_FLOAT_VEC2 = 0x08B50;
	public static final int GL_COMPRESSED_SLUMINANCE = 0x08C4A;
	public static final int GL_SHADER_OBJECT = 0x08B48;
	public static final int GL_SHADER_TYPE = 0x08B4F;
	public static final int GL_SHADING_LANGUAGE_VERSION = 0x08B8C;
	public static final int GL_DELETE_STATUS = 0x08B80;
	public static final int GL_LINK_STATUS = 0x08B82;
	public static final int GL_DRAW_BUFFER9 = 0x0882E;
	public static final int GL_DRAW_BUFFER7 = 0x0882C;
	public static final int GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x08B49;
	public static final int GL_SAMPLER_2D_SHADOW = 0x08B62;
	public static final int GL_DRAW_BUFFER8 = 0x0882D;
	public static final int GL_DRAW_BUFFER5 = 0x0882A;
	public static final int GL_DRAW_BUFFER6 = 0x0882B;
	public static final int GL_DRAW_BUFFER3 = 0x08828;
	public static final int GL_DRAW_BUFFER4 = 0x08829;
	public static final int GL_DRAW_BUFFER1 = 0x08826;
	public static final int GL_DRAW_BUFFER2 = 0x08827;
	public void glAttachShader(int program, int shader);
	public void glBindAttribLocation(int program, int index, java.nio.ByteBuffer name);
	public void glBindAttribLocation(int program, int index, java.lang.CharSequence name);
	public void glBlendEquationSeparate(int modeRGB, int modeAlpha);
	public void glCompileShader(int shader);
	public int glCreateProgram();
	public int glCreateShader(int type);
	public void glDeleteProgram(int program);
	public void glDeleteShader(int shader);
	public void glDetachShader(int program, int shader);
	public void glDisableVertexAttribArray(int index);
	public void glDrawBuffers(int buffer);
	public void glDrawBuffers(java.nio.IntBuffer buffers);
	public void glEnableVertexAttribArray(int index);
	public java.lang.String glGetActiveAttrib(int program, int index, int maxLength);
	public void glGetActiveAttrib(int program, int index, java.nio.IntBuffer length, java.nio.IntBuffer size, java.nio.IntBuffer type, java.nio.ByteBuffer name);
	public java.lang.String glGetActiveAttrib(int program, int index, int maxLength, java.nio.IntBuffer sizeType);
	public int glGetActiveAttribSize(int program, int index);
	public int glGetActiveAttribType(int program, int index);
	public java.lang.String glGetActiveUniform(int program, int index, int maxLength);
	public void glGetActiveUniform(int program, int index, java.nio.IntBuffer length, java.nio.IntBuffer size, java.nio.IntBuffer type, java.nio.ByteBuffer name);
	public java.lang.String glGetActiveUniform(int program, int index, int maxLength, java.nio.IntBuffer sizeType);
	public int glGetActiveUniformSize(int program, int index);
	public int glGetActiveUniformType(int program, int index);
	public void glGetAttachedShaders(int program, java.nio.IntBuffer count, java.nio.IntBuffer shaders);
	public int glGetAttribLocation(int program, java.nio.ByteBuffer name);
	public int glGetAttribLocation(int program, java.lang.CharSequence name);
	public int glGetProgram(int program, int pname);
	public void glGetProgram(int program, int pname, java.nio.IntBuffer params);
	public int glGetProgrami(int program, int pname);
	public java.lang.String glGetProgramInfoLog(int program, int maxLength);
	public void glGetProgramInfoLog(int program, java.nio.IntBuffer length, java.nio.ByteBuffer infoLog);
	public int glGetShader(int shader, int pname);
	public void glGetShader(int shader, int pname, java.nio.IntBuffer params);
	public int glGetShaderi(int shader, int pname);
	public java.lang.String glGetShaderInfoLog(int shader, int maxLength);
	public void glGetShaderInfoLog(int shader, java.nio.IntBuffer length, java.nio.ByteBuffer infoLog);
	public java.lang.String glGetShaderSource(int shader, int maxLength);
	public void glGetShaderSource(int shader, java.nio.IntBuffer length, java.nio.ByteBuffer source);
	public void glGetUniform(int program, int location, java.nio.FloatBuffer params);
	public void glGetUniform(int program, int location, java.nio.IntBuffer params);
	public int glGetUniformLocation(int program, java.nio.ByteBuffer name);
	public int glGetUniformLocation(int program, java.lang.CharSequence name);
	public void glGetVertexAttrib(int index, int pname, java.nio.DoubleBuffer params);
	public void glGetVertexAttrib(int index, int pname, java.nio.FloatBuffer params);
	public void glGetVertexAttrib(int index, int pname, java.nio.IntBuffer params);
	public void glGetVertexAttribPointer(int index, int pname, java.nio.ByteBuffer pointer);
	public java.nio.ByteBuffer glGetVertexAttribPointer(int index, int pname, long result_size);
	public boolean glIsProgram(int program);
	public boolean glIsShader(int shader);
	public void glLinkProgram(int program);
	public void glShaderSource(int shader, java.nio.ByteBuffer string);
	public void glShaderSource(int shader, java.lang.CharSequence string);
	public void glShaderSource(int shader, java.lang.CharSequence[] strings);
	public void glStencilFuncSeparate(int face, int func, int ref, int mask);
	public void glStencilMaskSeparate(int face, int mask);
	public void glStencilOpSeparate(int face, int sfail, int dpfail, int dppass);
	public void glUniform1(int location, java.nio.FloatBuffer values);
	public void glUniform1(int location, java.nio.IntBuffer values);
	public void glUniform1f(int location, float v0);
	public void glUniform1i(int location, int v0);
	public void glUniform2(int location, java.nio.FloatBuffer values);
	public void glUniform2(int location, java.nio.IntBuffer values);
	public void glUniform2f(int location, float v0, float v1);
	public void glUniform2i(int location, int v0, int v1);
	public void glUniform3(int location, java.nio.FloatBuffer values);
	public void glUniform3(int location, java.nio.IntBuffer values);
	public void glUniform3f(int location, float v0, float v1, float v2);
	public void glUniform3i(int location, int v0, int v1, int v2);
	public void glUniform4(int location, java.nio.FloatBuffer values);
	public void glUniform4(int location, java.nio.IntBuffer values);
	public void glUniform4f(int location, float v0, float v1, float v2, float v3);
	public void glUniform4i(int location, int v0, int v1, int v2, int v3);
	public void glUniformMatrix2(int location, boolean transpose, java.nio.FloatBuffer matrices);
	public void glUniformMatrix3(int location, boolean transpose, java.nio.FloatBuffer matrices);
	public void glUniformMatrix4(int location, boolean transpose, java.nio.FloatBuffer matrices);
	public void glUseProgram(int program);
	public void glValidateProgram(int program);
	public void glVertexAttrib1d(int index, double x);
	public void glVertexAttrib1f(int index, float x);
	public void glVertexAttrib1s(int index, short x);
	public void glVertexAttrib2d(int index, double x, double y);
	public void glVertexAttrib2f(int index, float x, float y);
	public void glVertexAttrib2s(int index, short x, short y);
	public void glVertexAttrib3d(int index, double x, double y, double z);
	public void glVertexAttrib3f(int index, float x, float y, float z);
	public void glVertexAttrib3s(int index, short x, short y, short z);
	public void glVertexAttrib4d(int index, double x, double y, double z, double w);
	public void glVertexAttrib4f(int index, float x, float y, float z, float w);
	public void glVertexAttrib4Nub(int index, byte x, byte y, byte z, byte w);
	public void glVertexAttrib4s(int index, short x, short y, short z, short w);
	public void glVertexAttribPointer(int index, int size, boolean unsigned, boolean normalized, int stride, java.nio.ByteBuffer buffer);
	public void glVertexAttribPointer(int index, int size, boolean unsigned, boolean normalized, int stride, java.nio.IntBuffer buffer);
	public void glVertexAttribPointer(int index, int size, boolean unsigned, boolean normalized, int stride, java.nio.ShortBuffer buffer);
	public void glVertexAttribPointer(int index, int size, boolean normalized, int stride, java.nio.DoubleBuffer buffer);
	public void glVertexAttribPointer(int index, int size, boolean normalized, int stride, java.nio.FloatBuffer buffer);
	public void glVertexAttribPointer(int index, int size, int type, boolean normalized, int stride, java.nio.ByteBuffer buffer);
	public void glVertexAttribPointer(int index, int size, int type, boolean normalized, int stride, long buffer_buffer_offset);
	public void glUniformMatrix2x3(int location, boolean transpose, java.nio.FloatBuffer matrices);
	public void glUniformMatrix2x4(int location, boolean transpose, java.nio.FloatBuffer matrices);
	public void glUniformMatrix3x2(int location, boolean transpose, java.nio.FloatBuffer matrices);
	public void glUniformMatrix3x4(int location, boolean transpose, java.nio.FloatBuffer matrices);
	public void glUniformMatrix4x2(int location, boolean transpose, java.nio.FloatBuffer matrices);
	public void glUniformMatrix4x3(int location, boolean transpose, java.nio.FloatBuffer matrices);
}
